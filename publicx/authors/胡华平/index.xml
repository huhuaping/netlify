<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>胡华平 | Academic</title>
    <link>https://huhuaping.netlify.app/authors/%E8%83%A1%E5%8D%8E%E5%B9%B3/</link>
      <atom:link href="https://huhuaping.netlify.app/authors/%E8%83%A1%E5%8D%8E%E5%B9%B3/index.xml" rel="self" type="application/rss+xml" />
    <description>胡华平</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>huhuaping@2019</copyright><lastBuildDate>Sun, 28 Feb 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://huhuaping.netlify.app/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_2.png</url>
      <title>胡华平</title>
      <link>https://huhuaping.netlify.app/authors/%E8%83%A1%E5%8D%8E%E5%B9%B3/</link>
    </image>
    
    <item>
      <title>第00章 课程说明</title>
      <link>https://huhuaping.netlify.app/course-statistics/chapter00-course-schedule/</link>
      <pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/course-statistics/chapter00-course-schedule/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;一教学课件&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;一、教学课件&lt;/h2&gt;
&lt;p&gt;以下种类型课件都可以使用，两者可以互补，但强烈建议使用第一种类型&lt;code&gt;Xaringan slide&lt;/code&gt;课件&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.现代型课件（Xaringan slide）&lt;/strong&gt;（操作提示&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;）：&lt;svg style=&#34;height:17;fill:blue;&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M187.7 153.7c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7s61.7-26 61.7-57.7c0-32-27.7-57.7-61.7-57.7zm143.4 0c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7 34.3 0 61.7-26 61.7-57.7.1-32-27.4-57.7-61.7-57.7zm156.6 90l-6 4.3V49.7c0-27.4-20.6-49.7-46-49.7H76.6c-25.4 0-46 22.3-46 49.7V248c-2-1.4-4.3-2.9-6.3-4.3-15.1-10.6-25.1 4-16 17.7 18.3 22.6 53.1 50.3 106.3 72C58.3 525.1 252 555.7 248.9 457.5c0-.7.3-56.6.3-96.6 5.1 1.1 9.4 2.3 13.7 3.1 0 39.7.3 92.8.3 93.5-3.1 98.3 190.6 67.7 134.3-124 53.1-21.7 88-49.4 106.3-72 9.1-13.8-.9-28.3-16.1-17.8zm-30.5 19.2c-68.9 37.4-128.3 31.1-160.6 29.7-23.7-.9-32.6 9.1-33.7 24.9-10.3-7.7-18.6-15.5-20.3-17.1-5.1-5.4-13.7-8-27.1-7.7-31.7 1.1-89.7 7.4-157.4-28V72.3c0-34.9 8.9-45.7 40.6-45.7h317.7c30.3 0 40.9 12.9 40.9 45.7v190.6z&#34;/&gt;&lt;/svg&gt;&lt;a href=&#34;https://huhuaping.netlify.app/course-statistics/03-slide-class/00-course-schedule.html&#34;&gt;第00章-课程说明.html&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.传统型课件（pdf）&lt;/strong&gt;：&lt;svg style=&#34;height:17;fill:blue;&#34; viewBox=&#34;0 0 384 512&#34;&gt;&lt;path d=&#34;M181.9 256.1c-5-16-4.9-46.9-2-46.9 8.4 0 7.6 36.9 2 46.9zm-1.7 47.2c-7.7 20.2-17.3 43.3-28.4 62.7 18.3-7 39-17.2 62.9-21.9-12.7-9.6-24.9-23.4-34.5-40.8zM86.1 428.1c0 .8 13.2-5.4 34.9-40.2-6.7 6.3-29.1 24.5-34.9 40.2zM248 160h136v328c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V24C0 10.7 10.7 0 24 0h200v136c0 13.2 10.8 24 24 24zm-8 171.8c-20-12.2-33.3-29-42.7-53.8 4.5-18.5 11.6-46.6 6.2-64.2-4.7-29.4-42.4-26.5-47.8-6.8-5 18.3-.4 44.1 8.1 77-11.6 27.6-28.7 64.6-40.8 85.8-.1 0-.1.1-.2.1-27.1 13.9-73.6 44.5-54.5 68 5.6 6.9 16 10 21.5 10 17.9 0 35.7-18 61.1-61.8 25.8-8.5 54.1-19.1 79-23.2 21.7 11.8 47.1 19.5 64 19.5 29.2 0 31.2-32 19.7-43.4-13.9-13.6-54.3-9.7-73.6-7.2zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-74.1 255.3c4.1-2.7-2.5-11.9-42.8-9 37.1 15.8 42.8 9 42.8 9z&#34;/&gt;&lt;/svg&gt;&lt;a href=&#34;https://huhuaping.netlify.app/course-statistics/material/00-course-schedule-2021.3.2.pdf&#34;&gt;第00章-课程说明.pdf&lt;/a&gt; 。（更新日期：2021.3.2）&lt;/p&gt;
&lt;p&gt;以上两种类型课件的&lt;strong&gt;差异&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;两者的课件内容基本一致，区别有：&lt;code&gt;Xaringan slide&lt;/code&gt;课件内容会相对细节更丰富一些；&lt;code&gt;Xaringan slide&lt;/code&gt;课件更新频率会更高、更及时（里面有一些技术性原因）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Xaringan slide&lt;/code&gt;课件可以进行一些交互型操作，如表格、制图和代码展示等。&lt;code&gt;pdf&lt;/code&gt;课件是静态文件，使用者不能进行内容上的交互。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实际上你可以随时使用&lt;code&gt;chrome&lt;/code&gt;浏览器自己将&lt;code&gt;Xaringan slide&lt;/code&gt;课件导出为&lt;code&gt;pdf&lt;/code&gt;课件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Xaringan slide&lt;/code&gt;课件适合交互学习，而&lt;code&gt;pdf&lt;/code&gt;课件适合线下打印或进行电子笔记。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!---footnote following---&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;课件采用&lt;a href=&#34;https://rmarkdown.rstudio.com/&#34;&gt;Rmarkdown语言&lt;/a&gt;编写而成，课件&lt;code&gt;Slide&lt;/code&gt;的形式由&lt;a href=&#34;https://github.com/yihui/xaringan&#34;&gt;Xaringan包&lt;/a&gt;渲染得到。&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;&lt;strong&gt;操作提示&lt;/strong&gt;（电脑PC端操作）：点击&lt;strong&gt;课件区域&lt;/strong&gt;，按&lt;strong&gt;&lt;code&gt;F&lt;/code&gt;&lt;/strong&gt;键，可全屏观看。按左/右方向键（&lt;span class=&#34;math inline&#34;&gt;\(\leftarrow/\rightarrow\)&lt;/span&gt;），可以前进/后退翻页。敲击数字键，再按&lt;strong&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;/strong&gt;可进入任意指定的页码。如，敲击数字10，观看第10页。&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>第01章 绪论</title>
      <link>https://huhuaping.netlify.app/course-statistics/chpt01-introduction/</link>
      <pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/course-statistics/chpt01-introduction/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;一教学课件&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;一、教学课件&lt;/h2&gt;
&lt;p&gt;以下种类型课件都可以使用，两者可以互补，但强烈建议使用第一种类型&lt;code&gt;Xaringan slide&lt;/code&gt;课件&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.现代型课件（Xaringan slide）&lt;/strong&gt;（操作提示&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;）：&lt;svg style=&#34;height:17;fill:blue;&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M187.7 153.7c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7s61.7-26 61.7-57.7c0-32-27.7-57.7-61.7-57.7zm143.4 0c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7 34.3 0 61.7-26 61.7-57.7.1-32-27.4-57.7-61.7-57.7zm156.6 90l-6 4.3V49.7c0-27.4-20.6-49.7-46-49.7H76.6c-25.4 0-46 22.3-46 49.7V248c-2-1.4-4.3-2.9-6.3-4.3-15.1-10.6-25.1 4-16 17.7 18.3 22.6 53.1 50.3 106.3 72C58.3 525.1 252 555.7 248.9 457.5c0-.7.3-56.6.3-96.6 5.1 1.1 9.4 2.3 13.7 3.1 0 39.7.3 92.8.3 93.5-3.1 98.3 190.6 67.7 134.3-124 53.1-21.7 88-49.4 106.3-72 9.1-13.8-.9-28.3-16.1-17.8zm-30.5 19.2c-68.9 37.4-128.3 31.1-160.6 29.7-23.7-.9-32.6 9.1-33.7 24.9-10.3-7.7-18.6-15.5-20.3-17.1-5.1-5.4-13.7-8-27.1-7.7-31.7 1.1-89.7 7.4-157.4-28V72.3c0-34.9 8.9-45.7 40.6-45.7h317.7c30.3 0 40.9 12.9 40.9 45.7v190.6z&#34;/&gt;&lt;/svg&gt;&lt;a href=&#34;https://huhuaping.netlify.app/course-statistics/03-slide-class/01-introduction.html&#34;&gt;第01章-绪论.html&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.传统型课件（pdf）&lt;/strong&gt;：&lt;svg style=&#34;height:17;fill:blue;&#34; viewBox=&#34;0 0 384 512&#34;&gt;&lt;path d=&#34;M181.9 256.1c-5-16-4.9-46.9-2-46.9 8.4 0 7.6 36.9 2 46.9zm-1.7 47.2c-7.7 20.2-17.3 43.3-28.4 62.7 18.3-7 39-17.2 62.9-21.9-12.7-9.6-24.9-23.4-34.5-40.8zM86.1 428.1c0 .8 13.2-5.4 34.9-40.2-6.7 6.3-29.1 24.5-34.9 40.2zM248 160h136v328c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V24C0 10.7 10.7 0 24 0h200v136c0 13.2 10.8 24 24 24zm-8 171.8c-20-12.2-33.3-29-42.7-53.8 4.5-18.5 11.6-46.6 6.2-64.2-4.7-29.4-42.4-26.5-47.8-6.8-5 18.3-.4 44.1 8.1 77-11.6 27.6-28.7 64.6-40.8 85.8-.1 0-.1.1-.2.1-27.1 13.9-73.6 44.5-54.5 68 5.6 6.9 16 10 21.5 10 17.9 0 35.7-18 61.1-61.8 25.8-8.5 54.1-19.1 79-23.2 21.7 11.8 47.1 19.5 64 19.5 29.2 0 31.2-32 19.7-43.4-13.9-13.6-54.3-9.7-73.6-7.2zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-74.1 255.3c4.1-2.7-2.5-11.9-42.8-9 37.1 15.8 42.8 9 42.8 9z&#34;/&gt;&lt;/svg&gt;&lt;a href=&#34;https://huhuaping.netlify.app/course-statistics/material/01-introduction-2021.3.2.pdf&#34;&gt;第01章-绪论.pdf&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;以上两种类型课件的&lt;strong&gt;差异&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;两者的课件内容基本一致，区别有：&lt;code&gt;Xaringan slide&lt;/code&gt;课件内容会相对细节更丰富一些；&lt;code&gt;Xaringan slide&lt;/code&gt;课件更新频率会更高、更及时（里面有一些技术性原因）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Xaringan slide&lt;/code&gt;课件可以进行一些交互型操作，如表格、制图和代码展示等。&lt;code&gt;pdf&lt;/code&gt;课件是静态文件，使用者不能进行内容上的交互。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实际上你可以随时使用&lt;code&gt;chrome&lt;/code&gt;浏览器自己将&lt;code&gt;Xaringan slide&lt;/code&gt;课件导出为&lt;code&gt;pdf&lt;/code&gt;课件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Xaringan slide&lt;/code&gt;课件适合交互学习，而&lt;code&gt;pdf&lt;/code&gt;课件适合线下打印或进行电子笔记。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!---footnote following---&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;课件采用&lt;a href=&#34;https://rmarkdown.rstudio.com/&#34;&gt;Rmarkdown语言&lt;/a&gt;编写而成，课件&lt;code&gt;Slide&lt;/code&gt;的形式由&lt;a href=&#34;https://github.com/yihui/xaringan&#34;&gt;Xaringan包&lt;/a&gt;渲染得到。&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;&lt;strong&gt;操作提示&lt;/strong&gt;（电脑PC端操作）：点击&lt;strong&gt;课件区域&lt;/strong&gt;，按&lt;strong&gt;&lt;code&gt;F&lt;/code&gt;&lt;/strong&gt;键，可全屏观看。按左/右方向键（&lt;span class=&#34;math inline&#34;&gt;\(\leftarrow/\rightarrow\)&lt;/span&gt;），可以前进/后退翻页。敲击数字键，再按&lt;strong&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;/strong&gt;可进入任意指定的页码。如，敲击数字10，观看第10页。&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>第02章 数据收集和整理</title>
      <link>https://huhuaping.netlify.app/course-statistics/chpt02-data-sourcing/</link>
      <pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/course-statistics/chpt02-data-sourcing/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;一教学课件&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;一、教学课件&lt;/h2&gt;
&lt;p&gt;以下种类型课件都可以使用，两者可以互补，但强烈建议使用第一种类型&lt;code&gt;Xaringan slide&lt;/code&gt;课件&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.现代型课件（Xaringan slide）&lt;/strong&gt;（操作提示&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;）：&lt;svg style=&#34;height:17;fill:blue;&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M187.7 153.7c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7s61.7-26 61.7-57.7c0-32-27.7-57.7-61.7-57.7zm143.4 0c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7 34.3 0 61.7-26 61.7-57.7.1-32-27.4-57.7-61.7-57.7zm156.6 90l-6 4.3V49.7c0-27.4-20.6-49.7-46-49.7H76.6c-25.4 0-46 22.3-46 49.7V248c-2-1.4-4.3-2.9-6.3-4.3-15.1-10.6-25.1 4-16 17.7 18.3 22.6 53.1 50.3 106.3 72C58.3 525.1 252 555.7 248.9 457.5c0-.7.3-56.6.3-96.6 5.1 1.1 9.4 2.3 13.7 3.1 0 39.7.3 92.8.3 93.5-3.1 98.3 190.6 67.7 134.3-124 53.1-21.7 88-49.4 106.3-72 9.1-13.8-.9-28.3-16.1-17.8zm-30.5 19.2c-68.9 37.4-128.3 31.1-160.6 29.7-23.7-.9-32.6 9.1-33.7 24.9-10.3-7.7-18.6-15.5-20.3-17.1-5.1-5.4-13.7-8-27.1-7.7-31.7 1.1-89.7 7.4-157.4-28V72.3c0-34.9 8.9-45.7 40.6-45.7h317.7c30.3 0 40.9 12.9 40.9 45.7v190.6z&#34;/&gt;&lt;/svg&gt;&lt;a href=&#34;https://huhuaping.netlify.app/course-statistics/03-slide-class/02-data-sourcing.html&#34;&gt;第02章-数据收集和整理.html&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.传统型课件（pdf）&lt;/strong&gt;：&lt;svg style=&#34;height:17;fill:blue;&#34; viewBox=&#34;0 0 384 512&#34;&gt;&lt;path d=&#34;M181.9 256.1c-5-16-4.9-46.9-2-46.9 8.4 0 7.6 36.9 2 46.9zm-1.7 47.2c-7.7 20.2-17.3 43.3-28.4 62.7 18.3-7 39-17.2 62.9-21.9-12.7-9.6-24.9-23.4-34.5-40.8zM86.1 428.1c0 .8 13.2-5.4 34.9-40.2-6.7 6.3-29.1 24.5-34.9 40.2zM248 160h136v328c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V24C0 10.7 10.7 0 24 0h200v136c0 13.2 10.8 24 24 24zm-8 171.8c-20-12.2-33.3-29-42.7-53.8 4.5-18.5 11.6-46.6 6.2-64.2-4.7-29.4-42.4-26.5-47.8-6.8-5 18.3-.4 44.1 8.1 77-11.6 27.6-28.7 64.6-40.8 85.8-.1 0-.1.1-.2.1-27.1 13.9-73.6 44.5-54.5 68 5.6 6.9 16 10 21.5 10 17.9 0 35.7-18 61.1-61.8 25.8-8.5 54.1-19.1 79-23.2 21.7 11.8 47.1 19.5 64 19.5 29.2 0 31.2-32 19.7-43.4-13.9-13.6-54.3-9.7-73.6-7.2zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-74.1 255.3c4.1-2.7-2.5-11.9-42.8-9 37.1 15.8 42.8 9 42.8 9z&#34;/&gt;&lt;/svg&gt;&lt;a href=&#34;#&#34;&gt;第02章-数据收集和整理.pdf&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;以上两种类型课件的&lt;strong&gt;差异&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;两者的课件内容基本一致，区别有：&lt;code&gt;Xaringan slide&lt;/code&gt;课件内容会相对细节更丰富一些；&lt;code&gt;Xaringan slide&lt;/code&gt;课件更新频率会更高、更及时（里面有一些技术性原因）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Xaringan slide&lt;/code&gt;课件可以进行一些交互型操作，如表格、制图和代码展示等。&lt;code&gt;pdf&lt;/code&gt;课件是静态文件，使用者不能进行内容上的交互。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实际上你可以随时使用&lt;code&gt;chrome&lt;/code&gt;浏览器自己将&lt;code&gt;Xaringan slide&lt;/code&gt;课件导出为&lt;code&gt;pdf&lt;/code&gt;课件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Xaringan slide&lt;/code&gt;课件适合交互学习，而&lt;code&gt;pdf&lt;/code&gt;课件适合线下打印或进行电子笔记。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!---footnote following---&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;课件采用&lt;a href=&#34;https://rmarkdown.rstudio.com/&#34;&gt;Rmarkdown语言&lt;/a&gt;编写而成，课件&lt;code&gt;Slide&lt;/code&gt;的形式由&lt;a href=&#34;https://github.com/yihui/xaringan&#34;&gt;Xaringan包&lt;/a&gt;渲染得到。&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;&lt;strong&gt;操作提示&lt;/strong&gt;（电脑PC端操作）：点击&lt;strong&gt;课件区域&lt;/strong&gt;，按&lt;strong&gt;&lt;code&gt;F&lt;/code&gt;&lt;/strong&gt;键，可全屏观看。按左/右方向键（&lt;span class=&#34;math inline&#34;&gt;\(\leftarrow/\rightarrow\)&lt;/span&gt;），可以前进/后退翻页。敲击数字键，再按&lt;strong&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;/strong&gt;可进入任意指定的页码。如，敲击数字10，观看第10页。&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>第03章 数据的图表展示</title>
      <link>https://huhuaping.netlify.app/course-statistics/chpt03-visualization/</link>
      <pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/course-statistics/chpt03-visualization/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;一教学课件&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;一、教学课件&lt;/h2&gt;
&lt;p&gt;以下种类型课件都可以使用，两者可以互补，但强烈建议使用第一种类型&lt;code&gt;Xaringan slide&lt;/code&gt;课件&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.现代型课件（Xaringan slide）&lt;/strong&gt;（操作提示&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;）：&lt;svg style=&#34;height:17;fill:blue;&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M187.7 153.7c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7s61.7-26 61.7-57.7c0-32-27.7-57.7-61.7-57.7zm143.4 0c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7 34.3 0 61.7-26 61.7-57.7.1-32-27.4-57.7-61.7-57.7zm156.6 90l-6 4.3V49.7c0-27.4-20.6-49.7-46-49.7H76.6c-25.4 0-46 22.3-46 49.7V248c-2-1.4-4.3-2.9-6.3-4.3-15.1-10.6-25.1 4-16 17.7 18.3 22.6 53.1 50.3 106.3 72C58.3 525.1 252 555.7 248.9 457.5c0-.7.3-56.6.3-96.6 5.1 1.1 9.4 2.3 13.7 3.1 0 39.7.3 92.8.3 93.5-3.1 98.3 190.6 67.7 134.3-124 53.1-21.7 88-49.4 106.3-72 9.1-13.8-.9-28.3-16.1-17.8zm-30.5 19.2c-68.9 37.4-128.3 31.1-160.6 29.7-23.7-.9-32.6 9.1-33.7 24.9-10.3-7.7-18.6-15.5-20.3-17.1-5.1-5.4-13.7-8-27.1-7.7-31.7 1.1-89.7 7.4-157.4-28V72.3c0-34.9 8.9-45.7 40.6-45.7h317.7c30.3 0 40.9 12.9 40.9 45.7v190.6z&#34;/&gt;&lt;/svg&gt;&lt;a href=&#34;https://huhuaping.netlify.app/course-statistics/03-slide-class/03-visualization.html&#34;&gt;第03章-数据的图表展示.html&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.传统型课件（pdf）&lt;/strong&gt;：&lt;svg style=&#34;height:17;fill:blue;&#34; viewBox=&#34;0 0 384 512&#34;&gt;&lt;path d=&#34;M181.9 256.1c-5-16-4.9-46.9-2-46.9 8.4 0 7.6 36.9 2 46.9zm-1.7 47.2c-7.7 20.2-17.3 43.3-28.4 62.7 18.3-7 39-17.2 62.9-21.9-12.7-9.6-24.9-23.4-34.5-40.8zM86.1 428.1c0 .8 13.2-5.4 34.9-40.2-6.7 6.3-29.1 24.5-34.9 40.2zM248 160h136v328c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V24C0 10.7 10.7 0 24 0h200v136c0 13.2 10.8 24 24 24zm-8 171.8c-20-12.2-33.3-29-42.7-53.8 4.5-18.5 11.6-46.6 6.2-64.2-4.7-29.4-42.4-26.5-47.8-6.8-5 18.3-.4 44.1 8.1 77-11.6 27.6-28.7 64.6-40.8 85.8-.1 0-.1.1-.2.1-27.1 13.9-73.6 44.5-54.5 68 5.6 6.9 16 10 21.5 10 17.9 0 35.7-18 61.1-61.8 25.8-8.5 54.1-19.1 79-23.2 21.7 11.8 47.1 19.5 64 19.5 29.2 0 31.2-32 19.7-43.4-13.9-13.6-54.3-9.7-73.6-7.2zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-74.1 255.3c4.1-2.7-2.5-11.9-42.8-9 37.1 15.8 42.8 9 42.8 9z&#34;/&gt;&lt;/svg&gt;&lt;a href=&#34;https://huhuaping.netlify.app/course-statistics/material/01-introduction-2019.9.18.pdf&#34;&gt;第03章-数据的图表展示.pdf&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;以上两种类型课件的&lt;strong&gt;差异&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;两者的课件内容基本一致，区别有：&lt;code&gt;Xaringan slide&lt;/code&gt;课件内容会相对细节更丰富一些；&lt;code&gt;Xaringan slide&lt;/code&gt;课件更新频率会更高、更及时（里面有一些技术性原因）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Xaringan slide&lt;/code&gt;课件可以进行一些交互型操作，如表格、制图和代码展示等。&lt;code&gt;pdf&lt;/code&gt;课件是静态文件，使用者不能进行内容上的交互。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实际上你可以随时使用&lt;code&gt;chrome&lt;/code&gt;浏览器自己将&lt;code&gt;Xaringan slide&lt;/code&gt;课件导出为&lt;code&gt;pdf&lt;/code&gt;课件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Xaringan slide&lt;/code&gt;课件适合交互学习，而&lt;code&gt;pdf&lt;/code&gt;课件适合线下打印或进行电子笔记。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!---footnote following---&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;课件采用&lt;a href=&#34;https://rmarkdown.rstudio.com/&#34;&gt;Rmarkdown语言&lt;/a&gt;编写而成，课件&lt;code&gt;Slide&lt;/code&gt;的形式由&lt;a href=&#34;https://github.com/yihui/xaringan&#34;&gt;Xaringan包&lt;/a&gt;渲染得到。&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;&lt;strong&gt;操作提示&lt;/strong&gt;（电脑PC端操作）：点击&lt;strong&gt;课件区域&lt;/strong&gt;，按&lt;strong&gt;&lt;code&gt;F&lt;/code&gt;&lt;/strong&gt;键，可全屏观看。按左/右方向键（&lt;span class=&#34;math inline&#34;&gt;\(\leftarrow/\rightarrow\)&lt;/span&gt;），可以前进/后退翻页。敲击数字键，再按&lt;strong&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;/strong&gt;可进入任意指定的页码。如，敲击数字10，观看第10页。&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>第04章 数据的概括性度量</title>
      <link>https://huhuaping.netlify.app/course-statistics/chpt04-data-measuring/</link>
      <pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/course-statistics/chpt04-data-measuring/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;一教学课件&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;一、教学课件&lt;/h2&gt;
&lt;p&gt;以下种类型课件都可以使用，两者可以互补，但强烈建议使用第一种类型&lt;code&gt;Xaringan slide&lt;/code&gt;课件&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.现代型课件（Xaringan slide）&lt;/strong&gt;（操作提示&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;）：&lt;svg style=&#34;height:17;fill:blue;&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M187.7 153.7c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7s61.7-26 61.7-57.7c0-32-27.7-57.7-61.7-57.7zm143.4 0c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7 34.3 0 61.7-26 61.7-57.7.1-32-27.4-57.7-61.7-57.7zm156.6 90l-6 4.3V49.7c0-27.4-20.6-49.7-46-49.7H76.6c-25.4 0-46 22.3-46 49.7V248c-2-1.4-4.3-2.9-6.3-4.3-15.1-10.6-25.1 4-16 17.7 18.3 22.6 53.1 50.3 106.3 72C58.3 525.1 252 555.7 248.9 457.5c0-.7.3-56.6.3-96.6 5.1 1.1 9.4 2.3 13.7 3.1 0 39.7.3 92.8.3 93.5-3.1 98.3 190.6 67.7 134.3-124 53.1-21.7 88-49.4 106.3-72 9.1-13.8-.9-28.3-16.1-17.8zm-30.5 19.2c-68.9 37.4-128.3 31.1-160.6 29.7-23.7-.9-32.6 9.1-33.7 24.9-10.3-7.7-18.6-15.5-20.3-17.1-5.1-5.4-13.7-8-27.1-7.7-31.7 1.1-89.7 7.4-157.4-28V72.3c0-34.9 8.9-45.7 40.6-45.7h317.7c30.3 0 40.9 12.9 40.9 45.7v190.6z&#34;/&gt;&lt;/svg&gt;&lt;a href=&#34;https://huhuaping.netlify.app/course-statistics/03-slide-class/04-data-measuring.html&#34;&gt;第04章-数据的概括性度量.html&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.传统型课件（pdf）&lt;/strong&gt;：&lt;svg style=&#34;height:17;fill:blue;&#34; viewBox=&#34;0 0 384 512&#34;&gt;&lt;path d=&#34;M181.9 256.1c-5-16-4.9-46.9-2-46.9 8.4 0 7.6 36.9 2 46.9zm-1.7 47.2c-7.7 20.2-17.3 43.3-28.4 62.7 18.3-7 39-17.2 62.9-21.9-12.7-9.6-24.9-23.4-34.5-40.8zM86.1 428.1c0 .8 13.2-5.4 34.9-40.2-6.7 6.3-29.1 24.5-34.9 40.2zM248 160h136v328c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V24C0 10.7 10.7 0 24 0h200v136c0 13.2 10.8 24 24 24zm-8 171.8c-20-12.2-33.3-29-42.7-53.8 4.5-18.5 11.6-46.6 6.2-64.2-4.7-29.4-42.4-26.5-47.8-6.8-5 18.3-.4 44.1 8.1 77-11.6 27.6-28.7 64.6-40.8 85.8-.1 0-.1.1-.2.1-27.1 13.9-73.6 44.5-54.5 68 5.6 6.9 16 10 21.5 10 17.9 0 35.7-18 61.1-61.8 25.8-8.5 54.1-19.1 79-23.2 21.7 11.8 47.1 19.5 64 19.5 29.2 0 31.2-32 19.7-43.4-13.9-13.6-54.3-9.7-73.6-7.2zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-74.1 255.3c4.1-2.7-2.5-11.9-42.8-9 37.1 15.8 42.8 9 42.8 9z&#34;/&gt;&lt;/svg&gt;&lt;a href=&#34;#&#34;&gt;第04章-数据的概括性度量.pdf&lt;/a&gt; 。（更新日期：2021.3.2）&lt;/p&gt;
&lt;p&gt;以上两种类型课件的&lt;strong&gt;差异&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;两者的课件内容基本一致，区别有：&lt;code&gt;Xaringan slide&lt;/code&gt;课件内容会相对细节更丰富一些；&lt;code&gt;Xaringan slide&lt;/code&gt;课件更新频率会更高、更及时（里面有一些技术性原因）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Xaringan slide&lt;/code&gt;课件可以进行一些交互型操作，如表格、制图和代码展示等。&lt;code&gt;pdf&lt;/code&gt;课件是静态文件，使用者不能进行内容上的交互。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实际上你可以随时使用&lt;code&gt;chrome&lt;/code&gt;浏览器自己将&lt;code&gt;Xaringan slide&lt;/code&gt;课件导出为&lt;code&gt;pdf&lt;/code&gt;课件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Xaringan slide&lt;/code&gt;课件适合交互学习，而&lt;code&gt;pdf&lt;/code&gt;课件适合线下打印或进行电子笔记。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!---footnote following---&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;课件采用&lt;a href=&#34;https://rmarkdown.rstudio.com/&#34;&gt;Rmarkdown语言&lt;/a&gt;编写而成，课件&lt;code&gt;Slide&lt;/code&gt;的形式由&lt;a href=&#34;https://github.com/yihui/xaringan&#34;&gt;Xaringan包&lt;/a&gt;渲染得到。&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;&lt;strong&gt;操作提示&lt;/strong&gt;（电脑PC端操作）：点击&lt;strong&gt;课件区域&lt;/strong&gt;，按&lt;strong&gt;&lt;code&gt;F&lt;/code&gt;&lt;/strong&gt;键，可全屏观看。按左/右方向键（&lt;span class=&#34;math inline&#34;&gt;\(\leftarrow/\rightarrow\)&lt;/span&gt;），可以前进/后退翻页。敲击数字键，再按&lt;strong&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;/strong&gt;可进入任意指定的页码。如，敲击数字10，观看第10页。&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R函数踩坑</title>
      <link>https://huhuaping.netlify.app/2021/02/23/variaty-of-r-function/</link>
      <pubDate>Tue, 23 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/2021/02/23/variaty-of-r-function/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/2021/02/23/variaty-of-r-function/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#分析场景与r包&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 分析场景与R包&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#统计制表-vs-janitortabyl&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 统计制表 vs janitor::tabyl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#分析场景与r函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 分析场景与R函数&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#数据类型读取&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 数据类型读取&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#生成重复数据rep&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 生成重复数据rep()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;分析场景与r包&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 分析场景与R包&lt;/h1&gt;
&lt;div id=&#34;统计制表-vs-janitortabyl&#34; class=&#34;section level2&#34; number=&#34;1.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 统计制表 vs janitor::tabyl&lt;/h2&gt;
&lt;p&gt;tabyls: a tidy, fully-featured approach to counting things. &lt;a href=&#34;https://cran.r-project.org/web/packages/janitor/vignettes/tabyls.html&#34;&gt;see link&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;优点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方便统计频次和频率&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方便添加行合计&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方便调整数据格式（百分数等）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以结合&lt;code&gt;knitr::kable()&lt;/code&gt;输出&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;不足&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;janitor::tabyl()&lt;/code&gt;仅适合处理&lt;strong&gt;原始数据&lt;/strong&gt;，并且是&lt;code&gt;data.frame&lt;/code&gt;或&lt;code&gt;vector&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;分析场景与r函数&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 分析场景与R函数&lt;/h1&gt;
&lt;div id=&#34;数据类型读取&#34; class=&#34;section level2&#34; number=&#34;2.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 数据类型读取&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;读取spss文件。为了避免出现编码错误（中文等多字节问题），建议使用&lt;code&gt;foreign::read.spss()&lt;/code&gt;函数，而不宜使用&lt;code&gt;haven::read_sav()&lt;/code&gt;函数&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_computer&amp;lt;- haven::read_sav(&amp;quot;../data/case-3.6-computer-sales.sav&amp;quot;,encoding = &amp;quot;UTF-8&amp;quot;, .name_repair = &amp;quot;unique&amp;quot;)

knitr::kable(df_computer)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_computer&amp;lt;- foreign::read.spss(&amp;quot;../data/case-3.6-computer-sales.sav&amp;quot;, to.data.frame=TRUE)
knitr::kable(df_computer)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;生成重复数据rep&#34; class=&#34;section level2&#34; number=&#34;2.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 生成重复数据rep()&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;分析场景&lt;/strong&gt;：生成指定的重复数据，要求指定被重复的&lt;code&gt;vector(&#34;char vec&#34;)&lt;/code&gt;，以及指定各自重复的次数&lt;code&gt;vector(&#34;times vec&#34;)&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;踩坑函数1&lt;/strong&gt;：直接&lt;code&gt;rep()&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;require(magrittr)
brand&amp;lt;- c(&amp;quot;果汁&amp;quot;,&amp;quot;矿泉水&amp;quot;,&amp;quot;绿茶&amp;quot;,&amp;quot;其他&amp;quot;,&amp;quot;碳酸饮料&amp;quot;)
reps &amp;lt;- c(6L, 10L,11L, 8L,15L)

rep(brand, reps)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt; [1] &amp;quot;果汁&amp;quot;     &amp;quot;果汁&amp;quot;     &amp;quot;果汁&amp;quot;     &amp;quot;果汁&amp;quot;     &amp;quot;果汁&amp;quot;     &amp;quot;果汁&amp;quot;    
 [7] &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;  
[13] &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;    
[19] &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;    
[25] &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;     &amp;quot;其他&amp;quot;     &amp;quot;其他&amp;quot;     &amp;quot;其他&amp;quot;    
[31] &amp;quot;其他&amp;quot;     &amp;quot;其他&amp;quot;     &amp;quot;其他&amp;quot;     &amp;quot;其他&amp;quot;     &amp;quot;其他&amp;quot;     &amp;quot;碳酸饮料&amp;quot;
[37] &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot;
[43] &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot;
[49] &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;踩坑函数2&lt;/strong&gt;：&lt;code&gt;mapply()&lt;/code&gt; + &lt;code&gt;rep()&lt;/code&gt;。这个要复杂一点。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;drink &amp;lt;- mapply(FUN = rep, x=brand, times = reps) %&amp;gt;%
  unlist()

names(drink) &amp;lt;-NULL

drink&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt; [1] &amp;quot;果汁&amp;quot;     &amp;quot;果汁&amp;quot;     &amp;quot;果汁&amp;quot;     &amp;quot;果汁&amp;quot;     &amp;quot;果汁&amp;quot;     &amp;quot;果汁&amp;quot;    
 [7] &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;  
[13] &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;矿泉水&amp;quot;   &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;    
[19] &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;    
[25] &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;     &amp;quot;绿茶&amp;quot;     &amp;quot;其他&amp;quot;     &amp;quot;其他&amp;quot;     &amp;quot;其他&amp;quot;    
[31] &amp;quot;其他&amp;quot;     &amp;quot;其他&amp;quot;     &amp;quot;其他&amp;quot;     &amp;quot;其他&amp;quot;     &amp;quot;其他&amp;quot;     &amp;quot;碳酸饮料&amp;quot;
[37] &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot;
[43] &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot;
[49] &amp;quot;碳酸饮料&amp;quot; &amp;quot;碳酸饮料&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Thread：统计学流派与演变</title>
      <link>https://huhuaping.netlify.app/2021/02/09/statistics-stream-and-structure/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/2021/02/09/statistics-stream-and-structure/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/2021/02/09/statistics-stream-and-structure/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#相关材料&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 相关材料&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#布尔巴基学派&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 布尔巴基学派&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#数学原理&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 数学原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#被遗忘的布尔巴基&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 被遗忘的布尔巴基&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#若干思考&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 若干思考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;相关材料&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 相关材料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;arXiv的一篇综述性文献“What are the most important statistical ideas of the past 50 years?”（&lt;a href=&#34;http://arxiv.org/abs/2012.00174&#34;&gt;Gelman and Vehtari, 2020&lt;/a&gt;）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“得到”栏目“卓克科学思维课”第058期“计算：现代数学研究什么（4）”。布尔巴基学派（&lt;a href=&#34;https://baike.baidu.com/item/%E5%B8%83%E5%B0%94%E5%B7%B4%E5%9F%BA%E5%AD%A6%E6%B4%BE&#34;&gt;百度百科&lt;/a&gt;）坚持“结构主义”观点，力图把整个数学建立在集合论的基础之上，并对整个数学作完全公理化处理。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;布尔巴基学派&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 布尔巴基学派&lt;/h1&gt;
&lt;div id=&#34;数学原理&#34; class=&#34;section level2&#34; number=&#34;2.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 数学原理&lt;/h2&gt;
&lt;p&gt;在布尔巴基的研究方法中，数学结构才是核心，而过往几百年的数学家们熟悉的像代数、集合、数论、分析，这些方法在布尔巴基这里已经完全不存在了。&lt;/p&gt;
&lt;p&gt;在新的视角下，从前完全不是一个领域的对象，就有可能出现在同一个结构中。比如线性代数跟初等几何这两个东西就属于同一种结构，简称同构。&lt;/p&gt;
&lt;p&gt;费马大定理的证明过程，这个猜想最终的证明，就是通过把一个椭圆曲线领域的问题同构映射到了另外一个叫做模形式上的问题，最终才证明的。通过这样的方式证明的定理，还不止费马大定理，还有莫德尔猜想。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;被遗忘的布尔巴基&#34; class=&#34;section level2&#34; number=&#34;2.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 被遗忘的布尔巴基&lt;/h2&gt;
&lt;p&gt;但这么做也有明显的劣势，就是它就像一个黑洞一样。我们从集合公理化的各项公理中挑出几条，用它们构建出一个新的集合，这个集合里的元素也许能跟当前数学分支中某一个分支对应上，它们是同构的。但更有可能是对应不上，跟任何数学分支都没有对应。&lt;/p&gt;
&lt;p&gt;这个新结构实际就相当于一个自成体系的新的数学分支。可是数学这门学科，当初某些分支是怎么诞生的呢？它多少都是跟解决一个问题挂钩的，而当没有实际难题要解决的时候，创立出来一个又一个新的分支，它们还自成系统，新创生出来的分支，实际应用在哪儿呢？一般来说是没有什么应用的，它就找不到落脚点，所以那就纯粹成了飘在人类抽象智力活动中的一种结构，一些问题了。&lt;/p&gt;
&lt;p&gt;大约是在1970年左右，布尔巴基学派就把大部分《数学原理》写出来了，之后更新就非常缓慢了，最后一本是1998年写的，也正是在这个年代，物理中和数学结合非常紧密的问题，你比如像杨振宁提出的那些跟数学相关的问题，都是有落脚点的难题。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;若干思考&#34; class=&#34;section level1&#34; number=&#34;3&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 若干思考&lt;/h1&gt;
&lt;p&gt;统计学或计量经济学存在众多分析方法、模型和概念术语。如何更好地从结构上或体系上来理解和认识这一学科领域。&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R包开发：构架及基础</title>
      <link>https://huhuaping.netlify.app/2021/02/02/pkg-develop/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/2021/02/02/pkg-develop/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/2021/02/02/pkg-develop/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#学习资源&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 学习资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#体系流程&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 体系流程&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#files-structure&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 文件夹结构体系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#包结构和状态package-structure-and-state&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 包结构和状态（Package structure and state）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#常规健康检查流程&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3&lt;/span&gt; 常规“健康检查”流程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#数据集的管理和使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4&lt;/span&gt; 数据集的管理和使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#概念要点&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 概念要点&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#区分description和namespace的作用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; 区分&lt;code&gt;DESCRIPTION&lt;/code&gt;和&lt;code&gt;NAMESPACE&lt;/code&gt;的作用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#区分.rbuildignore和.gitignore&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2&lt;/span&gt; 区分&lt;code&gt;.Rbuildignore&lt;/code&gt;和&lt;code&gt;.gitignore&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#区分rstudio-project和active-usethis-project&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.3&lt;/span&gt; 区分&lt;code&gt;RStudio Project&lt;/code&gt;和&lt;code&gt;active usethis project&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#注意load_all的使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.4&lt;/span&gt; 注意&lt;code&gt;load_all()&lt;/code&gt;的使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#区分code-in-scripts和code-in-packages&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.5&lt;/span&gt; 区分&lt;code&gt;code in scripts&lt;/code&gt;和&lt;code id=&#34;landscape&#34;&gt;code in packages&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r编程技巧&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; R编程技巧&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#用styler包保持良好代码风格&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.1&lt;/span&gt; 用&lt;code&gt;styler&lt;/code&gt;包保持良好代码风格&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#用withr包管理环境状态&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.2&lt;/span&gt; 用&lt;code&gt;withr&lt;/code&gt;包管理环境状态&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;学习资源&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 学习资源&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;“R packages” by &lt;a href=&#34;https://r-pkgs.org/index.html&#34;&gt;Hadley Wickham&lt;/a&gt;。R包开发的常备红宝书之一。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“rOpenSci Packages: Development, Maintenance, and Peer Review” by &lt;a href=&#34;https://devguide.ropensci.org/index.html&#34;&gt;rOpenSci team&lt;/a&gt;。rOpenSci团队R包开发的规范和指南。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“The tidyverse style guide” by &lt;a href=&#34;https://style.tidyverse.org/&#34;&gt;Hadley Wickham&lt;/a&gt;。提供了很多关于R编程规范和风格的建议。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;体系流程&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 体系流程&lt;/h1&gt;
&lt;div id=&#34;files-structure&#34; class=&#34;section level2&#34; number=&#34;2.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 文件夹结构体系&lt;/h2&gt;
&lt;p&gt;典型R包开发的文件夹结构体系如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;               levelName
1  package of ‘xmetrics’
2   |--.git             
3   |--.Rproj.user      
4   |--man              
5   |   |--lx.est.Rd    
6   |   |--lx.psm.Rd    
7   |   °--other.man.Rd 
8   |--R                
9   |   |--lx-est.R     
10  |   |--lx-psm.R     
11  |   °--other-fun.R  
12  |--.gitignore       
13  |--.Rbuildignore    
14  |--.Rhistory        
15  |--DESCRIPTION      
16  |--LICENSE          
17  |--LICENSE.md       
18  |--NAMESPACE        
19  °--xmetrics.Rproj   &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中有两个比较重要的且容易混淆的文件是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;文件&lt;code&gt;DESCRIPTION&lt;/code&gt;：存放包基本信息（Title, Version/Authors/Depends/License/Imports/Suggests/Depends等），是包开发必备文件之一，文件类型为&lt;code&gt;DCF&lt;/code&gt;（Debian control format），多行值换行需要空格（4格）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文件&lt;code&gt;NAMESPACE&lt;/code&gt;：存放&lt;code&gt;import&lt;/code&gt;外部依赖包或函数以及导出&lt;code&gt;export&lt;/code&gt;内部函数等名称信息。该文件为“只读状态”，相关信息通过开发工具函数（&lt;code&gt;roxygen2&lt;/code&gt;包）自动记录和更新。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;包结构和状态package-structure-and-state&#34; class=&#34;section level2&#34; number=&#34;2.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 包结构和状态（Package structure and state）&lt;/h2&gt;
&lt;p&gt;开发主要在前面三个阶段，后面两个阶段主要是包的使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;源状态（source）&lt;/strong&gt;：包开发的最初文件和结构，开发中最频繁使用的阶段。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;打包状态（bundled）&lt;/strong&gt;：将包压缩成了单个文件（&lt;code&gt;.tar.gz&lt;/code&gt;，但并不是简单压缩文件而已），仅是一种&lt;code&gt;源状态&lt;/code&gt;到&lt;code&gt;安装状态&lt;/code&gt;的过渡而已，也没有其他太大实际作用。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;二进制状态（binary）&lt;/strong&gt;：根据不同操作系统平台的压缩包文件，如windows系统使用&lt;code&gt;.zip&lt;/code&gt;包文件，macOS系统使用&lt;code&gt;.tgz&lt;/code&gt;包文件。可使用&lt;code&gt;devtools::build(binary = TRUE)&lt;/code&gt;构建二进制状态包文件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装状态（installed）&lt;/strong&gt;：二进制包已经被解压缩到包目录下（package library）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;缓存状态（in-memory）&lt;/strong&gt;：包的所有功能函数（functions）都已经在内存中，随时可供用户使用。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面图&lt;a href=&#34;#fig:pkg-files&#34;&gt;2.1&lt;/a&gt;比较直观地呈现了它们之间的关联与差异：&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pkg-files&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://huhuaping.netlify.app/pic/xmetrics/package-files.png&#34; alt=&#34;三种包开发状态的联系和差异&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2.1: 三种包开发状态的联系和差异
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;而下面图&lt;a href=&#34;#fig:pkg-installation&#34;&gt;2.2&lt;/a&gt;比较直观地呈现了不同方法调用不同包状态的差异：&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pkg-installation&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://huhuaping.netlify.app/pic/xmetrics/package-installation.png&#34; alt=&#34;不同方法调用不同包状态的差异&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2.2: 不同方法调用不同包状态的差异
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;常规健康检查流程&#34; class=&#34;section level2&#34; number=&#34;2.3&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3&lt;/span&gt; 常规“健康检查”流程&lt;/h2&gt;
&lt;p&gt;R包开发过程中应注意对迭代改进的常规“健康检查”（Constant health checks），基于&lt;code&gt;devtools&lt;/code&gt;包的操作流程一般为：&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;input type=&#34;checkbox&#34; disabled=&#34;&#34; checked=&#34;&#34; /&gt;
Edit one or more files below &lt;code&gt;&#34;R/.&#34;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;input type=&#34;checkbox&#34; disabled=&#34;&#34; checked=&#34;&#34; /&gt;
&lt;code&gt;devtools::document()&lt;/code&gt; (if you’ve made any changes that impact help files or NAMESPACE)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;input type=&#34;checkbox&#34; disabled=&#34;&#34; checked=&#34;&#34; /&gt;
&lt;code&gt;load_all()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;input type=&#34;checkbox&#34; disabled=&#34;&#34; checked=&#34;&#34; /&gt;
Run some examples interactively.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;input type=&#34;checkbox&#34; disabled=&#34;&#34; checked=&#34;&#34; /&gt;
&lt;code&gt;test()&lt;/code&gt; (or &lt;code&gt;test_file()&lt;/code&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;input type=&#34;checkbox&#34; disabled=&#34;&#34; checked=&#34;&#34; /&gt;
&lt;code&gt;check()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;数据集的管理和使用&#34; class=&#34;section level2&#34; number=&#34;2.4&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4&lt;/span&gt; 数据集的管理和使用&lt;/h2&gt;
&lt;p&gt;根据数据使用目的，可相应处置如下三类外部数据集（external data）（具体参见14章&lt;a href=&#34;https://r-pkgs.org/data.html#data&#34;&gt;External data&lt;/a&gt;）：&lt;/p&gt;
&lt;p&gt;a.&lt;strong&gt;导出型数据&lt;/strong&gt;（exported data）类别：存储并为用户提供二进制数据集（binary data），可以放置在&lt;code&gt;&#34;data/&#34;&lt;/code&gt;文件夹下（需要创建该文件夹）。数据文件应该使用&lt;code&gt;save()&lt;/code&gt;函数存储，且保存格式为&lt;code&gt;.RData&lt;/code&gt;文件。使用该数据集的方法是&lt;code&gt;usethis::use_data()&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&#34;data/&#34;&lt;/code&gt;文件夹下的数据集&lt;code&gt;mydata.RData&lt;/code&gt;也需要像函数一样采用&lt;code&gt;roxygen2 block&lt;/code&gt;编写说明文档（document），并存放在&lt;code&gt;&#34;R/data.R&#34;&lt;/code&gt;文件里。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;显然，这里的数据集是对初始数据源经过清洗和整理过的，这些中间数据或操作代码可以放置在另一个文件夹&lt;code&gt;&#34;data-raw/&#34;&lt;/code&gt;下，调用数据集也可以相应使用&lt;code&gt;usethis::use_data_raw()&lt;/code&gt;函数，当然不要忘记把这个文件夹添加到&lt;code&gt;.Rbuildignore&lt;/code&gt;的忽略名单里。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;b.&lt;strong&gt;内部数据&lt;/strong&gt;（internal data）类别：存储解析数据集（parsed data）但是不希望提供给用户，则可以放置在&lt;code&gt;&#34;R/sysdata.rda&#34;&lt;/code&gt;文件里。使用该数据集的方法是&lt;code&gt;usethis::use_data()&lt;/code&gt;。因为内部数据集不会export出来，因此不需要为这类数据编写说明文档。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;同外部数据类似，内部数据的来源数据或操作代码可以放置在另一个文件夹&lt;code&gt;&#34;data-raw/&#34;&lt;/code&gt;下，调用数据集也可以相应使用&lt;code&gt;usethis::use_data_raw()&lt;/code&gt;函数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;c.&lt;strong&gt;原始数据&lt;/strong&gt;（raw data）类别：存储原始数据集可以放置在&lt;code&gt;inst/extdata&lt;/code&gt;文件夹下（需要创建该文件夹）。使用该数据集的方法是&lt;code&gt;system.file()&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是：如果调用函数指定的数据文件并不存在，调用函数不会报错，而是返回空值。当然，如果想要显示为报错，则需要设定参数&lt;code&gt;system.file(&#34;extdata&#34;, &#34;none.csv&#34;, mustWork = TRUE)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;概念要点&#34; class=&#34;section level1&#34; number=&#34;3&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 概念要点&lt;/h1&gt;
&lt;div id=&#34;区分description和namespace的作用&#34; class=&#34;section level2&#34; number=&#34;3.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; 区分&lt;code&gt;DESCRIPTION&lt;/code&gt;和&lt;code&gt;NAMESPACE&lt;/code&gt;的作用&lt;/h2&gt;
&lt;p&gt;二者都是独立文件（见前面&lt;a href=&#34;#files-structure&#34;&gt;文件夹结构&lt;/a&gt;），对于外部依赖包的表述上存在一些容易引起混淆的地方。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;内容编辑方式上的不同该。包开发者可以主动编辑&lt;code&gt;DESCRIPTION&lt;/code&gt;文件信息，但是&lt;code&gt;NAMESPACE&lt;/code&gt;文件本身这是“只读”的（实际上该文件内容的编辑和更新，是自动通过对具体函数function的基本信息获得的）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对包依赖关系的表述和作用不同。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;a.在文件&lt;code&gt;DESCRIPTION&lt;/code&gt;中，本包对其他包的依赖关系有两种表述方式&lt;code&gt;Imports&lt;/code&gt;和&lt;code&gt;Suggests&lt;/code&gt;，二者存在差异（具体见节&lt;a href=&#34;https://r-pkgs.org/description.html#dependencies&#34;&gt;8.1 Dependencies&lt;/a&gt;）。简单说，二者主要差异在于强调对外部包依赖程度的强弱不同。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Imports&lt;/code&gt;列表下的依赖包，必须出现在开发包中，开发包才能正常运作。把依赖包列在清单中，作用是确保这些依赖包已经在&lt;strong&gt;本地安装&lt;/strong&gt;了。也即该清单下的外部包&lt;strong&gt;将会&lt;/strong&gt;随着开发包的运行而自动安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Suggests&lt;/code&gt;清单下的外部包，并不构成本包运行的必须条件，主要用于示例数据集、运行测试、编写函数说明等。该清单下的外部包&lt;strong&gt;不会&lt;/strong&gt;随着开发包的运行而自动安装。此外，如果仅仅只是“本地包开发”，则根本不需要使用&lt;code&gt;Suggests&lt;/code&gt;清单。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[技巧提示]：可以使用函数&lt;code&gt;usethis::use_package()&lt;/code&gt;快速而正确地添加依赖包到&lt;code&gt;Imports&lt;/code&gt;和&lt;code&gt;Suggests&lt;/code&gt;清单下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;b.在文件&lt;code&gt;NAMESPACE&lt;/code&gt;中，才是真正地将相关函数&lt;em&gt;（间接地、自动地）&lt;/em&gt;导入**到“名空间”中去。这完全不同于&lt;code&gt;DESCRIPTION&lt;/code&gt;文件下的&lt;code&gt;Imports&lt;/code&gt;的功能。如果外部依赖包正确导入到&lt;code&gt;NAMESPACE&lt;/code&gt;列表下，则可以避免多次使用&lt;code&gt;foo::fun()&lt;/code&gt;这样的代码。&lt;/p&gt;
&lt;p&gt;c.文件&lt;code&gt;DESCRIPTION&lt;/code&gt;和&lt;code&gt;NAMESPACE&lt;/code&gt;的关系。一方面，把需要提前安装的外部包都列在&lt;code&gt;DESCRIPTION&lt;/code&gt;文件的&lt;code&gt;Imports&lt;/code&gt;列表下，并建议明确地使用&lt;code&gt;foo::fun()&lt;/code&gt;进行函数编写，便于后期代码检查和维护。另一方面，所有在&lt;code&gt;DESCRIPTION&lt;/code&gt;文件&lt;code&gt;Imports&lt;/code&gt;列表下的外部依赖包，必须在文件&lt;code&gt;NAMESPACE&lt;/code&gt;中“完全”列出。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;简单说，只要用到的外部包都应该进入&lt;code&gt;NAMESPACE&lt;/code&gt;列表中，否则也别出现在&lt;code&gt;DESCRIPTION&lt;/code&gt;文件&lt;code&gt;Imports&lt;/code&gt;列表下！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;区分.rbuildignore和.gitignore&#34; class=&#34;section level2&#34; number=&#34;3.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2&lt;/span&gt; 区分&lt;code&gt;.Rbuildignore&lt;/code&gt;和&lt;code&gt;.gitignore&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;需要注意区分&lt;code&gt;.Rbuildignore&lt;/code&gt;和&lt;code&gt;.gitignore&lt;/code&gt;两个文件的目的和作用。简单说，&lt;code&gt;.Rbuildignore&lt;/code&gt;是为了协调&lt;strong&gt;包开发实践&lt;/strong&gt;与&lt;strong&gt;&lt;code&gt;CRAN&lt;/code&gt;包发布要求&lt;/strong&gt;之间的不同；而&lt;code&gt;.gitignore&lt;/code&gt;是为了满足&lt;strong&gt;版本控制&lt;/strong&gt;工具（如git）的特定需求。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;建议使用&lt;code&gt;usethis::use_build_ignore()&lt;/code&gt;来添加&lt;code&gt;.Rbuildignore&lt;/code&gt;忽略文件清单。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;区分rstudio-project和active-usethis-project&#34; class=&#34;section level2&#34; number=&#34;3.3&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.3&lt;/span&gt; 区分&lt;code&gt;RStudio Project&lt;/code&gt;和&lt;code&gt;active usethis project&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;需要注意的是&lt;code&gt;usethis&lt;/code&gt;包的函数不会明确知名路径，而是&lt;strong&gt;默认&lt;/strong&gt;在&lt;code&gt;active usethis project&lt;/code&gt;下，因此它也意味着默认它是与&lt;code&gt;RStudio Project&lt;/code&gt;同路径的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;建议使用&lt;code&gt;usethis::proj_sitrep()&lt;/code&gt;查看二者路径状态是否一致。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;usethis::proj_sitrep()

#   working_directory: &amp;#39;D:/github/xmerit&amp;#39;
# active_usethis_proj: &amp;#39;D:/github/xmerit&amp;#39;
# active_rstudio_proj: &amp;#39;D:/github/xmerit&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;注意load_all的使用&#34; class=&#34;section level2&#34; number=&#34;3.4&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.4&lt;/span&gt; 注意&lt;code&gt;load_all()&lt;/code&gt;的使用&lt;/h2&gt;
&lt;p&gt;开发或测试期间，如何转载或缓存一个开发包？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;建议使用&lt;code&gt;pkgload::load_all()&lt;/code&gt;，Rstudio快捷键：&lt;code&gt;Ctrl + Shift + L&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然，其他的方法还包括&lt;code&gt;devtools::load_all()&lt;/code&gt;等，具体差异可以见下面图&lt;a href=&#34;#fig:load-all&#34;&gt;3.1&lt;/a&gt;：&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:load-all&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://huhuaping.netlify.app/pic/xmetrics/load-all.png&#34; alt=&#34;R包开发阶段的若干调用方法&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3.1: R包开发阶段的若干调用方法
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;区分code-in-scripts和code-in-packages&#34; class=&#34;section level2&#34; number=&#34;3.5&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.5&lt;/span&gt; 区分&lt;code&gt;code in scripts&lt;/code&gt;和&lt;code id=&#34;landscape&#34;&gt;code in packages&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;区分脚本代码（code in scripts）和包代码（code in packages）的差异。&lt;/p&gt;
&lt;p&gt;（0）从代码存放位置来看：前者理论上可以存放在任意位置，而后者仅存放在&lt;code&gt;&#34;R/&#34;&lt;/code&gt;文件夹下。&lt;/p&gt;
&lt;p&gt;（1）从代码运行时点来看：对于脚本代码（code in scripts），一旦触发操作，它当即就已经“运行”；而对于包代码（code in packages），只有包建成（built），它才开始“运行”。&lt;/p&gt;
&lt;p&gt;（2）从代码使用方法来看：前者往往还在源代码阶段使用，例如&lt;code&gt;source(&#34;code-in-scripts.R&#34;)&lt;/code&gt;；后者在包建成后（built）添加该包&lt;code&gt;library(&#34;your-pkg&#34;)&lt;/code&gt;即可直接使用特定函数&lt;code&gt;your-pkg::fun_someone()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;（3）从R landscape（R环境风貌）来看：简单说一些操作会直接导致R landscape的改变。例如：转载某个包&lt;code&gt;library(&#34;your-pkg&#34;)&lt;/code&gt;、调整环境选项&lt;code&gt;options()&lt;/code&gt;、或修改工作文件夹&lt;code&gt;setwd()&lt;/code&gt;。这就意味着如果包代码（code in packages）里的一些函数涉及到上述操作，则它们会改变R landscape，从而引起对其他某些函数的新麻烦和问题。此外，我们也要避免使用牵扯到用户环境风貌（user’s landscape）的函数，例如&lt;code&gt;read.csv()&lt;/code&gt;就会与用户特定风貌相关的一个参数相关联。总之，包代码（code in packages）的若干具体建议如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不要使用&lt;code&gt;library()&lt;/code&gt; 或者&lt;code&gt;require()&lt;/code&gt; 。它会改变搜索路径（search path）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;永远不要使用&lt;code&gt;source()&lt;/code&gt;。它会插入执行的代码结果，从而改变当前环境。实际上&lt;code&gt;load_all()&lt;/code&gt;能够更好地让你调用你想要的内部函数。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一些慎重使用的操作函数。包括：&lt;code&gt;options()&lt;/code&gt;、&lt;code&gt;par()&lt;/code&gt;
&lt;code&gt;setwd()&lt;/code&gt;、&lt;code&gt;Sys.setenv()&lt;/code&gt;、&lt;code&gt;Sys.setlocale()&lt;/code&gt;、&lt;code&gt;set.seed()&lt;/code&gt;等。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;概括起来，包代码（code in packages）会更加严格：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Any R code outside of a function is suspicious and should be carefully reviewed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;r编程技巧&#34; class=&#34;section level1&#34; number=&#34;4&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; R编程技巧&lt;/h1&gt;
&lt;div id=&#34;用styler包保持良好代码风格&#34; class=&#34;section level2&#34; number=&#34;4.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.1&lt;/span&gt; 用&lt;code&gt;styler&lt;/code&gt;包保持良好代码风格&lt;/h2&gt;
&lt;p&gt;Hadley建议使用&lt;code&gt;tidyverse&lt;/code&gt;的代码风格（具体见节&lt;a href=&#34;https://r-pkgs.org/r.html#code-style&#34;&gt;7.3 Code style&lt;/a&gt;）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;建议使用&lt;code&gt;styler&lt;/code&gt;包来调整代码风格，而且Rstudio Addins菜单上会有相应插件。一些常见需求的风格调整包括：对整个包&lt;code&gt;styler::style_pkg()&lt;/code&gt;（注意使用带来的风险性）；对某个文件夹&lt;code&gt;styler::style_dir()&lt;/code&gt;；对某个文件&lt;code&gt;styler::style_file()&lt;/code&gt;；对字符向量&lt;code&gt;styler::style_text()&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;用withr包管理环境状态&#34; class=&#34;section level2&#34; number=&#34;4.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.2&lt;/span&gt; 用&lt;code&gt;withr&lt;/code&gt;包管理环境状态&lt;/h2&gt;
&lt;p&gt;前面讲过&lt;a href=&#34;#landscape&#34;&gt;R landscape&lt;/a&gt;会因某些操作而改变，因而引发不必要的问题和错误。&lt;code&gt;withr&lt;/code&gt;包可以很好处理这个矛盾（具体见节&lt;a href=&#34;https://r-pkgs.org/r.html#manage-state-with-withr&#34;&gt;7.5.1 Manage state with withr&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;需要注意的是，&lt;code&gt;withr&lt;/code&gt;包的同一类操作分别给出了两个函数，二者作用范围各有不同：&lt;code&gt;with_*()&lt;/code&gt;函数主要实现临时性环境状态调整（有点像“阅后即焚”）；而&lt;code&gt;local_*()&lt;/code&gt;函数会将修改后的环境状态维持下去，直至本函数操作全部结束（有点像“夜更巡逻”）。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R包开发：xmetrics</title>
      <link>https://huhuaping.netlify.app/2021/02/01/pkg-xmerit/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/2021/02/01/pkg-xmerit/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/2021/02/01/pkg-xmerit/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#缘由&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 缘由&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#开发思路&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 开发思路&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#主要功能&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 主要功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#主要挑战&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 主要挑战&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#理论公式输出&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.1&lt;/span&gt; 理论公式输出&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#数值公式输出&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.2&lt;/span&gt; 数值公式输出&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#一些工具函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 一些工具函数&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#将xls文件高保真地转换为xlsx文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; 将xls文件高保真地转换为xlsx文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#df数据列元素进行快速粘合输出&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2&lt;/span&gt; df数据列元素进行快速粘合输出&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;缘由&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 缘由&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;R包&lt;code&gt;xmetrics&lt;/code&gt;定位于辅助计量经济学和统计学课程进行高效的、可重现的（reproducable）教学内容准备和演示。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;R包命名的原则应该坚持：a.词形或发音与表意一致性，也即与开发R包核心功能定位的一致；b.不能太范化或通用，避免后期用户搜索的混淆，或推广传播的混乱。&lt;/p&gt;
&lt;p&gt;拟定开发的R包命名&lt;code&gt;xmetrics&lt;/code&gt;，音近于计量经济学英文&lt;strong&gt;Econometrics&lt;/strong&gt;，&lt;code&gt;X&lt;/code&gt;也有多种用途或神通广大的含义，而且metrics本身就是测量或度量的含义。通过google搜索关键词“xmetrics”的重合度或范化度，仅发现一款游泳穿戴设备名为“Xmetrics”（见&lt;a href=&#34;https://swimswam.com/xmetrics-the-worlds-first-activity-tracker-for-swimmers/&#34;&gt;网页&lt;/a&gt;）。继续google搜索关键词“R xmetrics”，发现一个定位为机器学习（Machine Learning）的R包命名为“Metrics”（见&lt;a href=&#34;https://cran.r-project.org/web/packages/Metrics/index.html&#34;&gt;CRAN&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;功能类似R包主要有： &lt;code&gt;equatiomatic&lt;/code&gt;（见github仓库&lt;a href=&#34;https://github.com/datalorax/equatiomatic&#34;&gt;datalorax/equatiomatic&lt;/a&gt;）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The goal of &lt;code&gt;equatiomatic&lt;/code&gt; is to reduce the pain associated with writing LaTeX code from a fitted model. In the future, the package aims to support any model supported by &lt;code&gt;broom&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;优点：简单、容易上手；支持较多的几类计量模型。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不足：功能相对较少（见下面）&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;开发思路&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 开发思路&lt;/h1&gt;
&lt;div id=&#34;主要功能&#34; class=&#34;section level2&#34; number=&#34;2.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 主要功能&lt;/h2&gt;
&lt;p&gt;math equation输出需要考虑的几个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;支持纯latex符号公式（symbol equation）、模型结果数值化（value equation）以及二者的混合；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持计量经济学数学公式（math equation）的各类理论表达，如总体回归模型PRM、总体回归函数PRF、样本回归模型（SRM）、样本回归函数（SRF）等；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持多种数值结果形式输出，例如经典三行式（系数、标准误、t值），或者经典一行式（系数）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持多种latex美化效果，包括&lt;code&gt;align&lt;/code&gt;、&lt;code&gt;alignedat&lt;/code&gt;等排列对齐环境；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持灵活个性化的参数符号（如&lt;span class=&#34;math inline&#34;&gt;\(\alpha,\beta,\gamma,\cdots\)&lt;/span&gt;）和下标符号（如&lt;span class=&#34;math inline&#34;&gt;\(X_i, u_i, u_t\)&lt;/span&gt;）选择等；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持多种模型估计方法，包括OLS回归、虚拟变量回归（ANOVA）等；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;与通用R包保持接口一致，如包&lt;code&gt;broom&lt;/code&gt;等；&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;主要挑战&#34; class=&#34;section level2&#34; number=&#34;2.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 主要挑战&lt;/h2&gt;
&lt;p&gt;计量经济学的语言符号体系&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;符号体系的标准化和一致性问题【低难度】&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数学证明和逻辑推导问题【工作强度大】。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;理论公式输出&#34; class=&#34;section level3&#34; number=&#34;2.2.1&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.1&lt;/span&gt; 理论公式输出&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;X &amp;lt;- c(paste0(rep(c(&amp;quot;X&amp;quot;,&amp;quot;Z&amp;quot;),each=4),1:4), &amp;quot;fathedu&amp;quot;, &amp;quot;mothedu&amp;quot;)
Y &amp;lt;- &amp;quot;lwage&amp;quot;
Greek.g &amp;lt;- c(&amp;quot;alpha&amp;quot;,&amp;quot;beta&amp;quot;,&amp;quot;lambda&amp;quot;)
Greek.n &amp;lt;- c(4,4,2)
#type &amp;lt;- &amp;quot;srm&amp;quot;
Obs &amp;lt;- &amp;quot;i&amp;quot;
N.row &amp;lt;- 4
Cst &amp;lt;- F&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;总体回归模型PRM：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34; id=&#34;eq:prm&#34;&gt;\[\begin{equation}
\begin{alignedat}{999}
lwage_i&amp;amp;=&amp;amp;&amp;amp;\alpha_{1}X1_i+&amp;amp;&amp;amp;\alpha_{2}X2_i+&amp;amp;&amp;amp;\alpha_{3}X3_i+&amp;amp;&amp;amp;\alpha_{4}X4_i\\&amp;amp;+&amp;amp;&amp;amp;\beta_{1}Z1_i+&amp;amp;&amp;amp;\beta_{2}Z2_i+&amp;amp;&amp;amp;\beta_{3}Z3_i+&amp;amp;&amp;amp;\beta_{4}Z4_i\\&amp;amp;+&amp;amp;&amp;amp;\lambda_{1}fathedu_i+&amp;amp;&amp;amp;\lambda_{2}mothedu_i+&amp;amp;&amp;amp;u_i
\end{alignedat}
\tag{2.1}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;样本回归模型SRM：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;srm_test &amp;lt;- lx.psm(x =X, y = Y, greek.g = Greek.g, greek.n = Greek.n,
       type = &amp;quot;srm&amp;quot;, intercept = Cst, lm.label = &amp;quot;srm&amp;quot;, 
       obs = Obs, n.row = N.row)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34; id=&#34;eq:srm&#34;&gt;\[\begin{equation}
\begin{alignedat}{999}
lwage_i&amp;amp;=&amp;amp;&amp;amp;\hat{\alpha}_{1}X1_i+&amp;amp;&amp;amp;\hat{\alpha}_{2}X2_i+&amp;amp;&amp;amp;\hat{\alpha}_{3}X3_i+&amp;amp;&amp;amp;\hat{\alpha}_{4}X4_i\\&amp;amp;+&amp;amp;&amp;amp;\hat{\beta}_{1}Z1_i+&amp;amp;&amp;amp;\hat{\beta}_{2}Z2_i+&amp;amp;&amp;amp;\hat{\beta}_{3}Z3_i+&amp;amp;&amp;amp;\hat{\beta}_{4}Z4_i\\&amp;amp;+&amp;amp;&amp;amp;\hat{\lambda}_{1}fathedu_i+&amp;amp;&amp;amp;\hat{\lambda}_{2}mothedu_i+&amp;amp;&amp;amp;e_i
\end{alignedat}
\tag{2.2}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;样本回归函数SRF：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;srf_test &amp;lt;- lx.psm(x =X, y = Y,greek.g = Greek.g, greek.n = Greek.n,
       type = &amp;quot;srf&amp;quot;, intercept = Cst, lm.label = &amp;quot;srf&amp;quot;,
       obs = Obs, n.row = N.row )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34; id=&#34;eq:srf&#34;&gt;\[\begin{equation}
\begin{alignedat}{999}
\widehat{lwage}_i&amp;amp;=&amp;amp;&amp;amp;\hat{\alpha}_{1}X1_i+&amp;amp;&amp;amp;\hat{\alpha}_{2}X2_i+&amp;amp;&amp;amp;\hat{\alpha}_{3}X3_i+&amp;amp;&amp;amp;\hat{\alpha}_{4}X4_i\\&amp;amp;+&amp;amp;&amp;amp;\hat{\beta}_{1}Z1_i+&amp;amp;&amp;amp;\hat{\beta}_{2}Z2_i+&amp;amp;&amp;amp;\hat{\beta}_{3}Z3_i+&amp;amp;&amp;amp;\hat{\beta}_{4}Z4_i\\&amp;amp;+&amp;amp;&amp;amp;\hat{\lambda}_{1}fathedu_i+&amp;amp;&amp;amp;\hat{\lambda}_{2}mothedu_i
\end{alignedat}
\tag{2.3}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;数值公式输出&#34; class=&#34;section level3&#34; number=&#34;2.2.2&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.2&lt;/span&gt; 数值公式输出&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;require(&amp;quot;wooldridge&amp;quot;)
mroz &amp;lt;- wooldridge::mroz %&amp;gt;%
  as_tibble() %&amp;gt;%
  select(lwage, educ,exper, 
         fatheduc,motheduc,everything()) %&amp;gt;%
  filter(!is.na(wage))

mod_origin &amp;lt;- formula(lwage ~ educ + nwifeinc +exper+I(exper^2) + I(exper^2*city)  )

ols_origin &amp;lt;- lm(formula = mod_origin, data = mroz)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;默认形式：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lx_out&amp;lt;- lx.est(lm.mod = mod_origin, lm.dt = mroz)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{equation}
\begin{alignedat}{999}
\widehat{lwage}&amp;amp;=&amp;amp;&amp;amp;-0.53&amp;amp;&amp;amp;+0.10educ_i&amp;amp;&amp;amp;+0.01nwifeinc_i\\&amp;amp;(s)&amp;amp;&amp;amp;0.2011&amp;amp;&amp;amp;0.0148&amp;amp;&amp;amp;0.0032\\&amp;amp;(t)&amp;amp;&amp;amp;-2.61&amp;amp;&amp;amp;+6.67&amp;amp;&amp;amp;+1.59\\&amp;amp;(cont.)&amp;amp;&amp;amp;+0.04exper_i&amp;amp;&amp;amp;-0.00exper^2_i&amp;amp;&amp;amp;+0.00exper^2*city_i\\&amp;amp;(s)&amp;amp;&amp;amp;0.0132&amp;amp;&amp;amp;0.0004&amp;amp;&amp;amp;0.0002\\&amp;amp;(t)&amp;amp;&amp;amp;+3.23&amp;amp;&amp;amp;-2.19&amp;amp;&amp;amp;+0.79
\end{alignedat}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;srm形式：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lx_out&amp;lt;- lx.est(lm.mod = mod_origin, lm.dt = mroz, style = &amp;quot;srm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{equation}
\begin{alignedat}{999}
{lwage}&amp;amp;=&amp;amp;&amp;amp;-0.53&amp;amp;&amp;amp;+0.10educ_i&amp;amp;&amp;amp;+0.01nwifeinc_i\\&amp;amp;(s)&amp;amp;&amp;amp;0.2011&amp;amp;&amp;amp;0.0148&amp;amp;&amp;amp;0.0032\\&amp;amp;(t)&amp;amp;&amp;amp;-2.61&amp;amp;&amp;amp;+6.67&amp;amp;&amp;amp;+1.59\\&amp;amp;(cont.)&amp;amp;&amp;amp;+0.04exper_i&amp;amp;&amp;amp;-0.00exper^2_i&amp;amp;&amp;amp;+0.00exper^2*city_i&amp;amp;&amp;amp;+e_i\\&amp;amp;(s)&amp;amp;&amp;amp;0.0132&amp;amp;&amp;amp;0.0004&amp;amp;&amp;amp;0.0002\\&amp;amp;(t)&amp;amp;&amp;amp;+3.23&amp;amp;&amp;amp;-2.19&amp;amp;&amp;amp;+0.79
\end{alignedat}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一行形式：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lx_out&amp;lt;- lx.est(lm.mod = mod_origin, lm.dt = mroz, style = &amp;quot;srm&amp;quot;, opt = c(&amp;quot;p&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\begin{equation}
\begin{alignedat}{999}
{lwage}&amp;amp;=&amp;amp;&amp;amp;-0.53&amp;amp;&amp;amp;+0.10educ_i&amp;amp;&amp;amp;+0.01nwifeinc_i\\&amp;amp;(p)&amp;amp;&amp;amp;0.0093&amp;amp;&amp;amp;0.0000&amp;amp;&amp;amp;0.1116\\&amp;amp;(cont.)&amp;amp;&amp;amp;+0.04exper_i&amp;amp;&amp;amp;-0.00exper^2_i&amp;amp;&amp;amp;+0.00exper^2*city_i&amp;amp;&amp;amp;+e_i\\&amp;amp;(p)&amp;amp;&amp;amp;0.0014&amp;amp;&amp;amp;0.0288&amp;amp;&amp;amp;0.4322
\end{alignedat}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;一些工具函数&#34; class=&#34;section level1&#34; number=&#34;3&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 一些工具函数&lt;/h1&gt;
&lt;div id=&#34;将xls文件高保真地转换为xlsx文件&#34; class=&#34;section level2&#34; number=&#34;3.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; 将xls文件高保真地转换为xlsx文件&lt;/h2&gt;
&lt;p&gt;参考资料1：&lt;a href=&#34;https://rdrr.io/github/KWB-R/kwb.geosalz/man/convert_xls_as_xlsx.html&#34;&gt;geosalz 源代码&lt;/a&gt;；参考资料2：&lt;a href=&#34;https://stackoverflow.com/questions/59248369/r-cannot-run-specific-cmd-code-that-converts-xls-to-xlsx&#34;&gt;“队长问答”&lt;/a&gt;；参考资料3：&lt;a href=&#34;http://justgeeks.blogspot.com/2014/08/&#34;&gt;博客文章&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;函数作用：将本地文件夹下的&lt;code&gt;.xls&lt;/code&gt;文件批量转换为&lt;code&gt;.xlsx&lt;/code&gt;文件。适用于windowns操作系统下，具体会调用Microsoft的本地电脑程序端。&lt;/p&gt;
&lt;p&gt;函数名称：&lt;code&gt;convert_xls_as_xlsx(input_dir, export_dir)&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用场景：“D:/github/article-west/R/xls2xlsx.R”；以及“D:/github/article-west/data-set-maintain.Rmd”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;convert_xls_as_xlsx(input_dir = &amp;quot;d:/github/article-west/data/v4-cost-revenue/01-raw/&amp;quot;,  
                    export_dir = &amp;quot;d:/github/article-west/data/v4-cost-revenue/001-out/&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意可能的提示（message）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Found 2 versions of &amp;#39;excelcnv.exe&amp;#39;:
  C:/Program Files/Microsoft Office/Updates/Download/PackageFiles/8BB798B7-EFF4-4781-AD0F-DE53892ADC7D/root/Office16/excelcnv.exe
  C:/Program Files/Microsoft Office/root/Office16/excelcnv.exe&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;根据本地电脑的实际情况，很可能需要修改两个地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;本地电脑office的安装路径：&lt;code&gt;safe_office_folder()&lt;/code&gt;函数的路径参数&lt;code&gt;office_path = &#34;C:/Program Files/Microsoft Office&#34;)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可能有office更新版本：&lt;code&gt;get_excelcnv_exe()&lt;/code&gt;函数的输出结果&lt;code&gt;paths[2]&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;df数据列元素进行快速粘合输出&#34; class=&#34;section level2&#34; number=&#34;3.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2&lt;/span&gt; df数据列元素进行快速粘合输出&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Xaringan美化：CSS功夫</title>
      <link>https://huhuaping.netlify.app/2021/02/01/css-base-xaringan/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/2021/02/01/css-base-xaringan/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/2021/02/01/css-base-xaringan/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#css基础&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; CSS基础&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#css-selector&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; CSS selector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#css-layout&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; CSS layout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xaringan的本质&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Xaringan的本质&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xaringan的css美化&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; Xaringan的CSS美化&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#layout-html&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; 头衬和底衬（header and footer）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#个性水印图片watermark&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2&lt;/span&gt; 个性水印图片（watermark）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#各类窗框notes-box&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.3&lt;/span&gt; 各类窗框（notes box）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#下一步需要处理的css问题&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; 下一步需要处理的CSS问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#储备炫酷技能&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.1&lt;/span&gt; 储备炫酷技能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#灵活选用字体&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.2&lt;/span&gt; 灵活选用字体&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#图文混排&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.3&lt;/span&gt; 图文混排&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#todo清单&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4&lt;/span&gt; Todo清单&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#最后的若干思考和感受&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; 最后的若干思考和感受&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;css基础&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; CSS基础&lt;/h1&gt;
&lt;div id=&#34;css-selector&#34; class=&#34;section level2&#34; number=&#34;1.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; CSS selector&lt;/h2&gt;
&lt;table&gt;
&lt;caption&gt;CSS selector&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width=&#34;60%&#34; /&gt;
&lt;col width=&#34;7%&#34; /&gt;
&lt;col width=&#34;17%&#34; /&gt;
&lt;col width=&#34;3%&#34; /&gt;
&lt;col width=&#34;10%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;th&gt;子类&lt;/th&gt;
&lt;th&gt;语法&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Simple selector&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;ID&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;#para1 { }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;class/name&lt;/td&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;.center{ }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Attribute selector&lt;/td&gt;
&lt;td&gt;[ ]&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Universal Selector&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;* { }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Grouping Selector&lt;/td&gt;
&lt;td&gt;,&lt;/td&gt;
&lt;td&gt;h1, h2, p { }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Combinator selector&lt;/td&gt;
&lt;td&gt;relationship&lt;/td&gt;
&lt;td&gt;Descendant&lt;/td&gt;
&lt;td&gt;space&lt;/td&gt;
&lt;td&gt;div p { }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Child&lt;/td&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;div &amp;gt; p { }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Adjacent sibling&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;div + p { }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;General sibling&lt;/td&gt;
&lt;td&gt;~&lt;/td&gt;
&lt;td&gt;div ~ p { }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;a href=&#34;https://www.w3schools.com/css/css_pseudo_classes.asp&#34; title=&#34;All CSS Pseudo Classes&#34;&gt;Pseudo -class selector&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;state&lt;/td&gt;
&lt;td&gt;Mouse over/ visited link/focus&lt;/td&gt;
&lt;td&gt;:&lt;/td&gt;
&lt;td&gt;a:link {}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;a href=&#34;https://www.w3schools.com/css/css_pseudo_elements.asp&#34; title=&#34;All CSS Pseudo Elements&#34;&gt;Pseudo -element selector&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;part&lt;/td&gt;
&lt;td&gt;First letter/ line/ element&lt;/td&gt;
&lt;td&gt;::&lt;/td&gt;
&lt;td&gt;::first-line { }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Insert content before or after&lt;/td&gt;
&lt;td&gt;::&lt;/td&gt;
&lt;td&gt;p::after { }&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;css-layout&#34; class=&#34;section level2&#34; number=&#34;1.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; CSS layout&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;布局：margin；border；padding&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;位置：position: static/relative/fixed/absolute/sticky&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;定位：top/right/bottom/left&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;xaringan的本质&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Xaringan的本质&lt;/h1&gt;
&lt;p&gt;Xaringan背后是基于remark.js的。remark.js后台基本工作流程，就是采用JavaScript语言把markdown文档，&lt;strong&gt;映射&lt;/strong&gt;到html上，并形成独特的slide幻灯片样式。因此，还是很有必要了解一下remark.js的说明文档（见&lt;a href=&#34;https://github.com/gnab/remark/wiki&#34;&gt;Wiki页面&lt;/a&gt;）。那么Xaringan包又起到了什么作用呢？根据yihui的说法：它扩展支持了Rmarkdown语法以及R代码的直接运行！&lt;/p&gt;
&lt;p&gt;Xaringan本质上是以html形态呈现，并使用css样式进行style视觉美化。Xaringan的技术讨论和细节见其&lt;a href=&#34;https://github.com/yihui/xaringan/wiki&#34;&gt;wiki页面&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;归结起来这是对slide工具的一种选择，而且是选择了“未来感”的html呈现形态！那么CSS知识这是绕不过去的学习壁垒。html和css的学习至少也是需要在“三姑学院”（&lt;a href=&#34;https://www.w3schools.com/css/default.asp&#34;&gt;W3school&lt;/a&gt;）的汪洋里过水“捞一遍”（通读一遍）。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;xaringan的css美化&#34; class=&#34;section level1&#34; number=&#34;3&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; Xaringan的CSS美化&lt;/h1&gt;
&lt;div id=&#34;layout-html&#34; class=&#34;section level2&#34; number=&#34;3.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; 头衬和底衬（header and footer）&lt;/h2&gt;
&lt;p&gt;调整header和footer视觉效果，主要是从某个slide开始里设定&lt;code&gt;layout: true&lt;/code&gt;，并按html语法设置header和footer样式。其完整的语法如下：&lt;/p&gt;
&lt;pre class=&#34;html&#34;&gt;&lt;code&gt;&amp;lt;!---slide area with layout---&amp;gt;
---
layout: true

&amp;lt;div class=&amp;quot;my-header-h2&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;div class=&amp;quot;watermark1&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;div class=&amp;quot;watermark2&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;div class=&amp;quot;watermark3&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;div class=&amp;quot;my-footer&amp;quot;&amp;gt;&amp;lt;span&amp;gt;huhuaping@  &amp;amp;emsp;&amp;amp;emsp; &amp;lt;a href=&amp;quot;#chapter01&amp;quot;&amp;gt; 第01章 导论&amp;lt;/a&amp;gt;
&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;
&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;&amp;amp;emsp;
&amp;lt;a href=&amp;quot;#sec-process&amp;quot;&amp;gt;1.3 计量经济学分析过程&amp;lt;/a&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt; 
---&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;具体样式细节包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;heading文本居中设定。需要注意叠放层级参数&lt;code&gt;z-index&lt;/code&gt;的设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;css&#34;&gt;&lt;code&gt;.remark-slide-content h2, h3,h4,h5{
  position: relative;
  top: 0px;
  margin: 15px 0px 50px;
  width: 99%;
  text-shadow: 0px 0px;
  text-align: center;
  z-index: 5;
}&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;header背景色和渐变方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;css&#34;&gt;&lt;code&gt;div.my-header-h2 {
    background-color: #FFFFFF;
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,#f77a00), color-stop(0%,#f77a00), color-stop(10%,red), color-stop(74%,#fbd0ac), color-stop(83%,#fbd0ac), color-stop(100%,#fddfc8));
    position: fixed;
    top: 0px;
    left: 0px;
    height: 86.92913px;
    width: 100%;
}&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;footer导航样式。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;css&#34;&gt;&lt;code&gt;div.my-footer {
    background-color: #272822;
    position: absolute;
    bottom: 0px;
    left: 0px;
    height: 20px;
    width: 100%;
}

div.my-footer span {
    font-size: 10pt;
    color: #F7F8FA;
    position: absolute;
    left: 15px;
    bottom: 2px;
}&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;footer的导航链接功能。先在css里设定链接文本的颜色，然后在slide里设定&lt;code&gt;layout: true&lt;/code&gt;（见前面完整&lt;a href=&#34;#layout-html&#34;&gt;语句块&lt;/a&gt;），并按html语法设定链接定位&lt;code&gt;#a-specify-id&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;css&#34;&gt;&lt;code&gt;/* link text color*/
div.my-footer a {
  color: white;
  background-color: transparent;
  text-decoration: none;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;个性水印图片watermark&#34; class=&#34;section level2&#34; number=&#34;3.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2&lt;/span&gt; 个性水印图片（watermark）&lt;/h2&gt;
&lt;p&gt;水印图片的个性化设定。首先需要设定css，然后在slide里设定&lt;code&gt;layout: true&lt;/code&gt;（见前面完整&lt;a href=&#34;#layout-html&#34;&gt;语句块&lt;/a&gt;），并按html语法依次设定三个水印图片，其中之一如&lt;code&gt;&amp;lt;div class=&#34;watermark1&#34;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;pre class=&#34;css&#34;&gt;&lt;code&gt;/* water remark image */

.watermark1::after {
  content: &amp;quot;&amp;quot;;
  display: block;
  width: 30%;
  height: 20%;
  position: absolute;
  top: 150px;
  left: 100px;
  background-image: url(&amp;quot;vlog-nwsuaf.jpg&amp;quot;);
  background-size: 80%;
  background-position: 0px 20px;
  background-repeat: no-repeat;
  opacity: 0.04;  
  /* Rotate div */
 -ms-transform: rotate(-45deg); /* IE 9 */
 -moz-transform: rotate(-45deg); /* firefox */
 -webkit-transform: rotate(-45deg); /* Chrome, Safari, Opera */
 transform: rotate(-45deg);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;各类窗框notes-box&#34; class=&#34;section level2&#34; number=&#34;3.3&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.3&lt;/span&gt; 各类窗框（notes box）&lt;/h2&gt;
&lt;p&gt;在多个写作场景下（如&lt;code&gt;xaringan&lt;/code&gt;、&lt;code&gt;blogdown&lt;/code&gt;、&lt;code&gt;rmarkdown&lt;/code&gt;），可能会用到各类提示窗框（notes box）。可以利用css设定获得个性化的提示窗框效果，具体可参看desirée de leon的博文&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://huhuaping.netlify.app/pic/div-tip-annotate.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;基本要点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;背后要用到html的&lt;code&gt;div&lt;/code&gt;语块&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以借用R包&lt;code&gt;bookdown&lt;/code&gt;的&lt;code&gt;blocks&lt;/code&gt;代码块，进行快捷应用。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一步：css文件（&lt;code&gt;/my-css/notes-tips.css&lt;/code&gt;）设定如下：&lt;/p&gt;
&lt;pre class=&#34;css&#34;&gt;&lt;code&gt;/* -----------div tips------------- */

div.puzzle, div.fyi, div.demo, div.notes {
    padding: 0.5em;
    margin: 0.5em 0;
    padding-left: 100px;
    background-size: 70px;
    background-repeat: no-repeat;
    background-position: 15px center;
    min-height: 100px;
    color: #1f5386;
    background-color: #bed3ec;
    border: solid 5px #dfedff;
}

div.notes {
  background-image: url(&amp;quot;notes-light-bulb-ff5500.png&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;style type=&#34;text/css&#34;&gt;
/* -----------div tips------------- */

div.puzzle, div.fyi, div.demo, div.notes {
    padding: 0.5em;
    margin: 0.5em 0;
    padding-left: 100px;
    background-size: 70px;
    background-repeat: no-repeat;
    background-position: 15px center;
    min-height: 100px;
    color: #1f5386;
    background-color: #bed3ec;
    border: solid 5px #dfedff;
}

div.notes {
  background-image: url(&#34;notes-light-bulb-ff5500.png&#34;);
}

&lt;/style&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：需要自己手动下载背景图片，免费的图片icon下载网站有：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://aiconica.net/&#34;&gt;aiconica.net&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fontawesome.com/&#34;&gt;fontawesome.com&lt;/a&gt;。正文里还可使用R函数&lt;code&gt;fontawesome::fa(&#39;slideshare&#39;)&lt;/code&gt;。例如slide图标&lt;svg style=&#34;height:0.8em;top:.04em;position:relative;fill:blue;&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M187.7 153.7c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7s61.7-26 61.7-57.7c0-32-27.7-57.7-61.7-57.7zm143.4 0c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7 34.3 0 61.7-26 61.7-57.7.1-32-27.4-57.7-61.7-57.7zm156.6 90l-6 4.3V49.7c0-27.4-20.6-49.7-46-49.7H76.6c-25.4 0-46 22.3-46 49.7V248c-2-1.4-4.3-2.9-6.3-4.3-15.1-10.6-25.1 4-16 17.7 18.3 22.6 53.1 50.3 106.3 72C58.3 525.1 252 555.7 248.9 457.5c0-.7.3-56.6.3-96.6 5.1 1.1 9.4 2.3 13.7 3.1 0 39.7.3 92.8.3 93.5-3.1 98.3 190.6 67.7 134.3-124 53.1-21.7 88-49.4 106.3-72 9.1-13.8-.9-28.3-16.1-17.8zm-30.5 19.2c-68.9 37.4-128.3 31.1-160.6 29.7-23.7-.9-32.6 9.1-33.7 24.9-10.3-7.7-18.6-15.5-20.3-17.1-5.1-5.4-13.7-8-27.1-7.7-31.7 1.1-89.7 7.4-157.4-28V72.3c0-34.9 8.9-45.7 40.6-45.7h317.7c30.3 0 40.9 12.9 40.9 45.7v190.6z&#34;/&gt;&lt;/svg&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;第二步：在&lt;code&gt;.Rmd&lt;/code&gt;文件的&lt;code&gt;yaml&lt;/code&gt;区域引用上面的css文件路径。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;css: 
  - ../mycss/notes-tips.css&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第三步：在&lt;code&gt;.Rmd&lt;/code&gt;文件下进行写作，并引用对应的css样式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;` ``{block, type=&amp;#39;notes&amp;#39;, echo=T}

待完成：找到新数据，绘制一张条形图，但其不适合制作柱状图。

` ``&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;下一步需要处理的css问题&#34; class=&#34;section level1&#34; number=&#34;4&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; 下一步需要处理的CSS问题&lt;/h1&gt;
&lt;div id=&#34;储备炫酷技能&#34; class=&#34;section level2&#34; number=&#34;4.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.1&lt;/span&gt; 储备炫酷技能&lt;/h2&gt;
&lt;p&gt;提前准备好各类丰富slide功能的css实现方法。具体明确的一些炫酷功能，相关slide和css样板可以参看：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Remark.js推荐的三个&lt;a href=&#34;https://github.com/gnab/remark/wiki/HTML-CSS-JS-samples&#34;&gt;Remark templates&lt;/a&gt;；尤其推荐Story模板&lt;a href=&#34;https://story.xaprb.com/slides/adirondack/#5&#34;&gt;Remark-Apron&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;另外，有空还要好好看看&lt;code&gt;xaringanthemer&lt;/code&gt;&lt;a href=&#34;https://github.com/gadenbuie/xaringanthemer&#34;&gt;R包&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://slides.earo.me/rladiesakl20/#39&#34;&gt;Earo Wang’s slide&lt;/a&gt;展示了很多炫酷技巧，包括Javascript交互实现动画效果等。源代码见其&lt;a href=&#34;https://github.com/earowang/rladiesakl20&#34;&gt;github&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://yongfu.name/slides/xaringan/#1&#34;&gt;Yongfu Liao’s slide&lt;/a&gt;，提供了简单的xaringan使用介绍。其源代码&lt;a href=&#34;https://github.com/liao961120/slides-old/tree/master/xaringan&#34;&gt;github&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://emitanaka.org/ninja-theme/themes/kunoichi/kunoichi-theme-example.html#1&#34;&gt;Emi Tanaka’s slide&lt;/a&gt;提供了关于页面布局的多种形式。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;灵活选用字体&#34; class=&#34;section level2&#34; number=&#34;4.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.2&lt;/span&gt; 灵活选用字体&lt;/h2&gt;
&lt;p&gt;解决字体灵活选用问题。工作量理论上不是很大，主要是受到中文字体适用性和加载速度等的限制。目前暂时还不想去碰它，大众字体就大众字体，先忍一忍。具体看yihui的相关思考和说明。如&lt;a href=&#34;https://yihui.org/cn/2017/04/source-han-serif/&#34;&gt;思源宋体&lt;/a&gt; ；&lt;a href=&#34;https://yihui.org/cn/2017/02/kaiti/#fnref:-1&#34;&gt;楷体&lt;/a&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;图文混排&#34; class=&#34;section level2&#34; number=&#34;4.3&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.3&lt;/span&gt; 图文混排&lt;/h2&gt;
&lt;p&gt;图文混排技巧。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;remark.js&lt;/code&gt;自带光环的边栏效果（side bar）&lt;code&gt;.left-column[]&lt;/code&gt;或者&lt;code&gt;.right-column[]&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;remark.js&lt;/code&gt;自带光环的两栏效果（two columns）&lt;code&gt;.pull-left[]&lt;/code&gt;或者&lt;code&gt;.pull-right[]&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;todo清单&#34; class=&#34;section level2&#34; number=&#34;4.4&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4&lt;/span&gt; Todo清单&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;页面布局。页面紧凑度和宽松度灵活调整。例如&lt;code&gt;remark-slide-content.roomy&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;前导符设定。正文符号列表的前导符设定问题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;动画效果。see &lt;a href=&#34;https://slides.earo.me/rladiesakl20/#1&#34;&gt;Earo Wang’s slide&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加logo。see &lt;a href=&#34;https://www.garrickadenbuie.com/blog/xaringan-tip-logo-all-slides/&#34;&gt;xaringan Tip: Add A Logo to All of Your Slides&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;最后的若干思考和感受&#34; class=&#34;section level1&#34; number=&#34;5&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; 最后的若干思考和感受&lt;/h1&gt;
&lt;p&gt;这次对Xaringan 又一次发起冲锋，直接缘由是《计量经济学》双一流课程团队的视频录制。团队里其他人都不用R和Rmarkdown，更不要提Xaringan slide了。大家仍旧还是基于PowerPoint准备和制作授课幻灯片，有的老师甚至操作系统还是win7，office套件还是2010版！所以只能我事先用powerpoint设定好ppt模板，大家各自拿去制作自己的授课ppt（其实大部分团队老师甚至连ppt母版也不会用）。考虑到我自己的实际需求，我是希望能同时兼顾自己使用xaringan 和团队其他老师使用ppt的一致性——当然是不能奢求最后两者视觉效果的完全一样！目前在Xaringan上的设定调整，基本上达到了ppt模板类似效果的80%左右。&lt;/p&gt;
&lt;p&gt;事实上，Xaringan和ppt二者效果一致性的达成，并不是最大的挑战。基本上基于html的Xaringan slide，可以使用css技巧实现ppt里的几乎所有功能。而况Xaringan还有很多ppt无法实现的“现代的”以及“未来的”诸多功能！真正的挑战在于团队协作，尤其是对于非常技术守旧的团队（并不指技术之外的其他方面）。到此，我的基本态度就是：最低限度地在技术方面与其他人协作，重点是把协作任务下自己事情做完、基本ok即可！&lt;/p&gt;
&lt;p&gt;当然，这里面也还有一个在协作冲突中推动自己不断学习进步的问题。显然，如果没有这次的协作录制课程，我肯定还是会一如往常地坚持“最小化学习”策略：也即如无实际所需，绝不去茫然学习所谓的各种知识技能。这一次，我充分认识到了CSS对于Xaringan甚至对于Html的重要性，并且看到了一些文档协作、协作和输出的“未来”趋势和走向！&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://desiree.rbind.io/post/2019/making-tip-boxes-with-bookdown-and-rmarkdown/&#34;&gt;MAKING PRETTY NOTE BOXES: A div tip for all occasions&lt;/a&gt;&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Netlify建站：主站与静态static资料的正确衔接</title>
      <link>https://huhuaping.netlify.app/2021/01/31/file-structure-witin-blog/</link>
      <pubDate>Sun, 31 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/2021/01/31/file-structure-witin-blog/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/2021/01/31/file-structure-witin-blog/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://huhuaping.netlify.app/2021/01/31/file-structure-witin-blog/index.en_files/fitvids/fitvids.min.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#netlify文件夹体系&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; netlify文件夹体系&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#dir-content&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; netlify content文件系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dir-static&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; netlify static文件夹系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#netlify-public文件系统&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; netlify public文件系统&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#netlify相关联的github仓库&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; netlify相关联的Github仓库&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#xaringan-slide的正确操作&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; Xaringan slide的正确操作&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#xaringan-slide的典型文件结构&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.1&lt;/span&gt; xaringan slide的典型文件结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xaringan-rmd调用本地图片文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.2&lt;/span&gt; Xaringan Rmd调用&lt;strong&gt;本地&lt;/strong&gt;图片文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xaringan-rmd代码块生成的graph&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.3&lt;/span&gt; Xaringan Rmd代码块生成的graph&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#若干netlify对接技巧&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 若干netlify对接技巧&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#netlify内部相互链接&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; netlify内部相互链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#output&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2&lt;/span&gt; netlify指定Rmd输出格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#对接失败与报错&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; 对接失败与报错&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#include_url服务器拒绝访问&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.1&lt;/span&gt; include_url()服务器拒绝访问&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;netlify文件夹体系&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; netlify文件夹体系&lt;/h1&gt;
&lt;p&gt;使用blogdown进行netlify建站，下述三个文件夹及作用需要区分清楚：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;content&lt;/code&gt;文件夹，主要进行写作或者接口配置（链接等），对接包括：post、publication、course、project等&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;static&lt;/code&gt;文件夹，主要存放来自其他仓库的静态资料。例如，xaringan slide课件制作往往在我的另一个课程仓库（如&lt;code&gt;course-econometrics&lt;/code&gt;），相关文件资料（&lt;code&gt;html&lt;/code&gt;）需要提前拷贝到这个文件夹对应位置。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;public&lt;/code&gt;文件夹，是建站结果的最终目录树文件系统。netlify服务器网站可以方便国际用户访问，但国内访问速度较慢。&lt;code&gt;public/&lt;/code&gt;后期还要更新到本地另外一个域名服务器网站（方便国内访问）。（见之前的&lt;a href=&#34;https://huhuaping.netlify.app/2020/10/05/hugo-big-update/#double-site&#34;&gt;博客文章&lt;/a&gt;）&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;dir-content&#34; class=&#34;section level2&#34; number=&#34;1.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; netlify content文件系统&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;                            levelName
1  netlify                           
2   |--static                        
3   |--content                       
4   |   |--course-advanced-statistics
5   |   |--course-econometrics       
6   |   |   |--data                  
7   |   |   |--schedule-theory.Rmd   
8   |   |   °--schedule-theory.html  
9   |   |--post                      
10  |   |--project                   
11  |   °--publication               
12  |--public                        
13  |--config                        
14  °--netlify.Rproj                 &lt;/code&gt;&lt;/pre&gt;
&lt;!---
上述htmlwidgets会保存在本地，然后使用html标记语言插入该文件

&lt;iframe src=&#34;tree.html&#34;&gt;&lt;/iframe&gt; 

参看1[HTML widgets](https://bookdown.org/yihui/blogdown/html-widgets.html)

参看2[HTML Widgets not displaying](https://github.com/rstudio/blogdown/issues/20#issuecomment-269389360)


---&gt;
&lt;/div&gt;
&lt;div id=&#34;dir-static&#34; class=&#34;section level2&#34; number=&#34;1.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; netlify static文件夹系统&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;                                    levelName
1  netlify                                   
2   |--static                                
3   |   |--course-advanced-statistics        
4   |   °--course-econometrics               
5   |       |--data                          
6   |       |--pic                           
7   |       |   |--chpt1-log.png             
8   |       |   °--chpt2-reg.png             
9   |       |--reading                       
10  |       |   |--cht01-history.files       
11  |       |   °--cht01-history.html        
12  |       |--01-introduction-slide.html    
13  |       °--02-simple-reg-basic-slide.html
14  |--content                               
15  |--public                                
16  |--config                                
17  °--netlify.Rproj                         &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;netlify-public文件系统&#34; class=&#34;section level2&#34; number=&#34;1.3&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; netlify public文件系统&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;                                    levelName
1  netlify                                   
2   |--static                                
3   |--content                               
4   |--public                                
5   |   |--course-advanced-statistics        
6   |   °--course-econometrics               
7   |       |--schedule-theory               
8   |       |--data                          
9   |       |--pic                           
10  |       |   |--chpt1-log.png             
11  |       |   °--chpt2-reg.png             
12  |       |--01-introduction-slide.html    
13  |       °--02-simple-reg-basic-slide.html
14  |--config                                
15  °--netlify.Rproj                         &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;netlify相关联的github仓库&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; netlify相关联的Github仓库&lt;/h1&gt;
&lt;p&gt;目前而言，neglify主站相关联的主要github仓库有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;主站仓库：&lt;code&gt;netlify&lt;/code&gt;仓库，基于hugo-academic网站模板，集合了众多的其他仓库的展示材料&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;教学课程仓库：主要包括本科课程《计量经济学》&lt;code&gt;course-econometrics&lt;/code&gt;;本科课程《统计学原理》&lt;code&gt;course-statistics&lt;/code&gt;;研究生课程《中级计量经济学》&lt;code&gt;master-SEM&lt;/code&gt;等。主要关联材料包括：课件Xaringan slide；补充材料html；pdf等。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;研究项目仓库：包括各类开源的研究类仓库，如&lt;a href=&#34;https://github.com/huhuaping/agri-trade-open&#34;&gt;agri-trade-open&lt;/a&gt;；&lt;a href=&#34;https://github.com/huhuaping/team-students&#34;&gt;team-students&lt;/a&gt;等。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其他仓库&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;xaringan-slide的正确操作&#34; class=&#34;section level2&#34; number=&#34;2.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; Xaringan slide的正确操作&lt;/h2&gt;
&lt;p&gt;使用Xaringan制作教学slide。需要注意到Xaringan制作的slide是不能独立封装的（self-contained），也即它需要依赖各种必要组件或资源。&lt;/p&gt;
&lt;div id=&#34;xaringan-slide的典型文件结构&#34; class=&#34;section level3&#34; number=&#34;2.1.1&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.1&lt;/span&gt; xaringan slide的典型文件结构&lt;/h3&gt;
&lt;p&gt;课程仓库下xaringan slide制作的典型文件结构：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;                                levelName
1  course-econometrics                   
2   |--data                              
3   |--pic                               
4   |   |--chpt1-log.png                 
5   |   °--chpt1-curve-points.png        
6   |--01-class-instruction              
7   |--02-lab-exercise                   
8   |--03-slide-class                    
9   |   |--libs                          
10  |   |   |--crosstalk-1.1.1           
11  |   |   |--htmlwidgets-1.5.3         
12  |   |   |   °--htmlwidgets.js        
13  |   |   °--remark-latest.min.js      
14  |   |--01-introduction-slide_files   
15  |   |   °--figure-html               
16  |   |       |--unnamed-chunk-14-1.png
17  |   |       °--unnamed-chunk-15-1.png
18  |   |--01-introduction-slide.html    
19  |   °--01-introduction-slide.Rmd     
20  |--template                          
21  |--EViews                            
22  |--mycss                             
23  |--public                            
24  °--course-econometrics.Rproj         &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;xaringan-rmd调用本地图片文件&#34; class=&#34;section level3&#34; number=&#34;2.1.2&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.2&lt;/span&gt; Xaringan Rmd调用&lt;strong&gt;本地&lt;/strong&gt;图片文件&lt;/h3&gt;
&lt;p&gt;值得注意的是Xaringan Rmd使用&lt;strong&gt;本地&lt;/strong&gt;图片文件（存放在&lt;code&gt;pic/&lt;/code&gt;文件夹下），应该使用相对路径，而不是绝对路径（参看&lt;a href=&#34;https://github.com/yihui/xaringan/issues/145%3E&#34;&gt;the full path approach doesn’t work&lt;/a&gt;）。也即意味着：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不能使用绝对路径&lt;code&gt;D:/github/course-econometrics/pic/chpt1-log.png&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同时也不能使用&lt;code&gt;here::here(&#34;pic&#34;,&#34;chpt1-log.png&#34;)&lt;/code&gt;，因为它也会给出绝对路径&lt;code&gt;&#34;D:/github/course-econometrics/pic/chpt1-log.png&#34;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么Rmd文件&lt;code&gt;01-introduction-slide.Rmd&lt;/code&gt;对上述本地图片的函数化引用应该设为相对路径形式，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;markdown&lt;/code&gt;语法：&lt;code&gt;![](&#34;../pic/chpt1-log.png&#34;)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;或者&lt;code&gt;knitr&lt;/code&gt;语法：&lt;code&gt;include_graphics(&#34;../pic/chpt1-log.png&#34;)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结起来，图片绝对路径和相对路径的差异比较如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;绝对路径直接无法渲染出图形&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;相对路径可以渲染出图形，而且可以使用chrome浏览器开发工具看到html元素&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;html&#34;&gt;&lt;code&gt;# html develop tool view

&amp;lt;div class=&amp;quot;figure&amp;quot; style=&amp;quot;text-align: center&amp;quot;&amp;gt;
  &amp;lt;img src=&amp;quot;../pic/chpt1-log.png&amp;quot; alt=&amp;quot;一份样本数据&amp;quot; width=&amp;quot;693&amp;quot;&amp;gt;
  &amp;lt;p class=&amp;quot;caption&amp;quot;&amp;gt;一份样本数据&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;xaringan-rmd代码块生成的graph&#34; class=&#34;section level3&#34; number=&#34;2.1.3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.3&lt;/span&gt; Xaringan Rmd代码块生成的graph&lt;/h3&gt;
&lt;p&gt;Rmd使用代码块生成的图片这会自动存放在同名文件夹下的一个文件夹内。如&lt;code&gt;01-introduction-slide.Rmd&lt;/code&gt;，则代码块&lt;code&gt;chunk-14&lt;/code&gt;制图将存放在自动生成的文件夹&lt;code&gt;01-introduction-slide_files/figure-html/unnamed-chunk-14-1.png&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;例如，R代码块14如下：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# r code chunk 14


ggplot(data.frame(x = seq(from = -5, to=5,length =500 )), aes(x = x)) +
  stat_function(fun = dnorm, args = list(0,1),
                aes(color = &amp;quot;mean=0, sd=1&amp;quot;)) +
  stat_function(fun = dnorm, args = list(0.5,2),
                aes(color = &amp;quot;mean=0.5, sd=2&amp;quot;)) +
  scale_colour_manual(&amp;quot;期望和标准差&amp;quot;, values = c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;))+
  scale_y_continuous(name = &amp;quot;概率值(probability)&amp;quot;) +
  theme(legend.text = element_text(size=16), legend.title = element_text(size=16))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以使用chrome浏览器开发工具看到其对应的html元素：&lt;/p&gt;
&lt;pre class=&#34;html&#34;&gt;&lt;code&gt;&amp;lt;!--- html develop tool view---&amp;gt;

&amp;lt;div class=&amp;quot;figure&amp;quot; style=&amp;quot;text-align: center&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;01-introduction-slide_files/figure-html/unnamed-chunk-14-1.png&amp;quot; alt=&amp;quot;正态分布(n=500)&amp;quot;&amp;gt;
&amp;lt;p class=&amp;quot;caption&amp;quot;&amp;gt;正态分布(n=500)&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;若干netlify对接技巧&#34; class=&#34;section level1&#34; number=&#34;3&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 若干netlify对接技巧&lt;/h1&gt;
&lt;div id=&#34;netlify内部相互链接&#34; class=&#34;section level2&#34; number=&#34;3.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; netlify内部相互链接&lt;/h2&gt;
&lt;p&gt;如果要直接在&lt;code&gt;/content/course-econometrics&lt;/code&gt;下用Rmd文件生成.html，然后再别处来调用这个内部的html文件？&lt;/p&gt;
&lt;p&gt;1.基于主站的相对链接引用（已测试）。参看“队长”问答&lt;a href=&#34;https://stackoverflow.com/questions/55930617/linking-to-another-post-in-blogdown&#34;&gt;Linking to another post in blogdown&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置基准地址，修改&lt;code&gt;config.toml&lt;/code&gt;参数：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# config.toml

baseurl = &amp;quot;https://yourdomain.netlify.app/&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;设定内部引用规则，修改&lt;code&gt;config.toml&lt;/code&gt;参数：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;toml&#34;&gt;&lt;code&gt;# config.toml

[permalinks]
  # If only creating events which are talks, we can optimize event URLs for talks.
  event = &amp;quot;/talk/:slug/&amp;quot;
  # Workaround Hugo publishing taxonomy URLs as plurals - consistently use singular across Academic.
  tags = &amp;quot;/tag/:slug/&amp;quot;
  categories = &amp;quot;/category/:slug/&amp;quot;
  publication_types = &amp;quot;/publication-type/:slug/&amp;quot;
  post = &amp;quot;/:year/:month/:day/:slug/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Rmd内部链接1：对于&lt;strong&gt;hugo标准模块&lt;/strong&gt;内容的链接。所谓hugo&lt;strong&gt;标准模块内容&lt;/strong&gt;，一般包括hugo版本内置好的&lt;code&gt;post&lt;/code&gt;、&lt;code&gt;publication&lt;/code&gt;、&lt;code&gt;tags&lt;/code&gt;等，可以通过上述&lt;code&gt;config.toml&lt;/code&gt;的参数块&lt;code&gt;[permalinks]&lt;/code&gt;看到其影子。因此，对于hugo标准模块内容的链接引用，都需要在这里指定链接的参数形式。值得说明的是：a.务必要按前述各个模块的链接地址规则进行url设定。b.不要画蛇添足&lt;code&gt;/2020/10/05/hugo-big-update/index.en.html&lt;/code&gt;（哪怕文件夹下有这个html文件）；c.只要设定了refer ID（如&lt;code&gt;{#your-section-refer}&lt;/code&gt;），就可以进行更进一步的链接。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;例如，以链接其他博文post为例，见之前的一篇博客文章谈到的&lt;a href=&#34;https://huhuaping.netlify.app/2020/10/05/hugo-big-update/#double-site&#34;&gt;“双服务器建站需求”&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其背后具体代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# note your can refer the section ID as your have set

例如，以链接其他博文post为例，见之前的一篇博客文章谈到的[&amp;quot;双服务器建站需求&amp;quot;](/2020/10/05/hugo-big-update/#double-site)。&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然，博文内部章节或任意内容的自我链接（需要事先设定为&lt;code&gt;{#a-ref-id}&lt;/code&gt;）也是一种常见的引用方式。此时对同一篇博文post内部ref ID的引用，则可以直接采用&lt;code&gt;[link-text](#a-ref-id)&lt;/code&gt;的形式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例如，请查看前面的content文件系统&lt;a href=&#34;#dir-content&#34;&gt;树形图&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其背后代码为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 需要事先设定好引用指针
# you should specify the reference ID before link it

例如，请查看前面的content文件系统[树形图](#dir-content)。&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Rmd内部链接2：对于&lt;strong&gt;非hugo标准模块&lt;/strong&gt;内容的链接。与上述对应，非hugo标准模块内容一般指用户根据hugo空白模板&lt;code&gt;widget = &#34;blank&#34;&lt;/code&gt;设定的页面。主站的课程系列（包括course-econometrics、course-advanced-statistics等）的内容（各种课程的文件结构可以参看前面提及的content文件系统&lt;a href=&#34;#dir-content&#34;&gt;树形图&lt;/a&gt;）就是基于hugo空白模板&lt;code&gt;widget = &#34;blank&#34;&lt;/code&gt;生成的。具体模板参数可以逐层追溯看到，例如先查看&lt;code&gt;netlify/content/course-econometrics/_index.md&lt;/code&gt;的yaml参数区域，然后进一步追溯其继承至&lt;code&gt;netlify/config/_default/menus.toml&lt;/code&gt;的toml参数区域，最后发现它的模板是&lt;code&gt;netlify/content/home/teaching.md&lt;/code&gt;ymal参数区域指定的&lt;code&gt;widget = &#34;blank&#34;&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此时，如果要链接在外部拷贝的一个特定静态网页文件，其存放路径&lt;code&gt;netlify/static/course-econometrics/reading/cht01-history.html&lt;/code&gt;（具体可参看前面提到的netlify static文件夹系统&lt;a href=&#34;#dir-static&#34;&gt;树形图&lt;/a&gt;）。此时路径指向应精准和明确。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例如，请点击查看《计量经济学》课程扩展阅读资料&lt;a href=&#34;https://huhuaping.netlify.app/course-econometrics/reading/cht01-history.html&#34;&gt;计量经济学的前世今生&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其背后的具体代码为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 路径指向应精准和明确，包含了后缀.html
# specify the file with full path

例如，请点击查看《计量经济学》课程扩展阅读资料[计量经济学的前世今生](/course-econometrics/reading/cht01-history.html)。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2.利用hugo的shortcode特性（未测试）。参看yihui提到的&lt;a href=&#34;https://bookdown.org/yihui/blogdown/content.html-shortcode&#34;&gt;Shortcode方法&lt;/a&gt;。正文行内引用方式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[第一章](r blogdown::shortcodex(&amp;quot;relref&amp;quot;, &amp;quot;chapter01-introduction.html&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;需要注意的是不能直接引用&lt;code&gt;chapter01-introduction.Rmd&lt;/code&gt;；但是可以直接引用&lt;code&gt;chapter01-introduction.md&lt;/code&gt;或者&lt;code&gt;chapter01-introduction.html&lt;/code&gt;。此外还要注意引用路径是相对的。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[博客文章提到](r blogdown::shortcodex(&amp;quot;relref&amp;quot;, &amp;quot;../post/2019-02-24-xaringan-for-course-slide.html&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;output&#34; class=&#34;section level2&#34; number=&#34;3.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2&lt;/span&gt; netlify指定Rmd输出格式&lt;/h2&gt;
&lt;p&gt;用.Rmd生成的文档能不能有其他的输出格式呢？还能做些别的么？&lt;/p&gt;
&lt;pre class=&#34;yaml&#34;&gt;&lt;code&gt;# add this in yaml area

output:
  blogdown::html_page:
    toc: true
    number_sections: true&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;对接失败与报错&#34; class=&#34;section level1&#34; number=&#34;4&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; 对接失败与报错&lt;/h1&gt;
&lt;div id=&#34;include_url服务器拒绝访问&#34; class=&#34;section level2&#34; number=&#34;4.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.1&lt;/span&gt; include_url()服务器拒绝访问&lt;/h2&gt;
&lt;p&gt;报错内容：使用&lt;code&gt;knitr::include_url()&lt;/code&gt;函数后，hugo或blogdown渲染网站，都无法显示对本地静态（&lt;code&gt;&#34;static/course/slide.html&#34;&lt;/code&gt;）文件&lt;code&gt;Xaringan slide&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;具体报错内容如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;本地预览下，&lt;code&gt;include_url(&#39;/path/to/file.html&#39;)&lt;/code&gt;则显示报错&lt;code&gt;localhost 拒绝了我们的连接请求。&lt;/code&gt;。markdown语法&lt;code&gt;[](/path/to/file.html)&lt;/code&gt;则只显示为纯文本。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;netlify built&lt;/code&gt;在线建站后，&lt;code&gt;include_url(&#39;/path/to/file.html&#39;)&lt;/code&gt;则显示服务器&lt;code&gt;.netlify.app 拒绝了我们的连接请求。&lt;/code&gt;。但是markdown语法&lt;code&gt;[](/path/to/file.html)&lt;/code&gt;则显示正常。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;chrome开发工具显示：&lt;code&gt;&amp;lt;div id=&#34;main-frame-error class=&#34;interstitial-wrapper&#34; &amp;lt;/div&amp;gt;&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1.use markdown syntax（link Ok）。课件（Xaringan slide）&lt;svg style=&#34;height:17;fill:blue;&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M187.7 153.7c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7s61.7-26 61.7-57.7c0-32-27.7-57.7-61.7-57.7zm143.4 0c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7 34.3 0 61.7-26 61.7-57.7.1-32-27.4-57.7-61.7-57.7zm156.6 90l-6 4.3V49.7c0-27.4-20.6-49.7-46-49.7H76.6c-25.4 0-46 22.3-46 49.7V248c-2-1.4-4.3-2.9-6.3-4.3-15.1-10.6-25.1 4-16 17.7 18.3 22.6 53.1 50.3 106.3 72C58.3 525.1 252 555.7 248.9 457.5c0-.7.3-56.6.3-96.6 5.1 1.1 9.4 2.3 13.7 3.1 0 39.7.3 92.8.3 93.5-3.1 98.3 190.6 67.7 134.3-124 53.1-21.7 88-49.4 106.3-72 9.1-13.8-.9-28.3-16.1-17.8zm-30.5 19.2c-68.9 37.4-128.3 31.1-160.6 29.7-23.7-.9-32.6 9.1-33.7 24.9-10.3-7.7-18.6-15.5-20.3-17.1-5.1-5.4-13.7-8-27.1-7.7-31.7 1.1-89.7 7.4-157.4-28V72.3c0-34.9 8.9-45.7 40.6-45.7h317.7c30.3 0 40.9 12.9 40.9 45.7v190.6z&#34;/&gt;&lt;/svg&gt;&lt;a href=&#34;https://huhuaping.netlify.app/course-statistics/03-slide-class/01-introduction.html&#34;&gt;第01章-绪论.html&lt;/a&gt; 。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[第01章-绪论.html](/course-statistics/03-slide-class/03-visualization.html)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2.try local graphic（graph OK）。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::include_graphics(&amp;quot;/pic/facet-multiple-geom.png&amp;quot;, error = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://huhuaping.netlify.app/pic/facet-multiple-geom.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;3.test the &lt;code&gt;include_url()&lt;/code&gt; （error）：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# out.extra=&amp;#39;style=&amp;quot;border: none;&amp;quot;&amp;#39;, out.width=&amp;#39;80%&amp;#39;
knitr::include_url(&amp;quot;/course-statistics/03-slide-class/03-visualization.html&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;iframe src=&#34;https://huhuaping.netlify.app/course-statistics/03-slide-class/03-visualization.html&#34; width=&#34;80%&#34; height=&#34;400px&#34; style=&#34;border: none;&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;4.try iframe html tag（error）:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;iframe seamless src=&amp;quot;/course-statistics/03-slide-class/03-visualization.html&amp;quot; width=&amp;quot;100%&amp;quot; height=&amp;quot;500&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;iframe seamless src=&#34;https://huhuaping.netlify.app/course-statistics/03-slide-class/03-visualization.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;5.test &lt;code&gt;xaringanExtra::embed_xaringan()&lt;/code&gt;（error）:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;xaringanExtra::embed_xaringan(
  url = &amp;quot;/course-statistics/03-slide-class/03-visualization.html&amp;quot;,
  ratio = &amp;quot;16:9&amp;quot;
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;shareagain&#34; style=&#34;min-width:300px;margin:1em auto;&#34;&gt;
&lt;iframe src=&#34;https://huhuaping.netlify.app/course-statistics/03-slide-class/03-visualization.html&#34; width=&#34;1600&#34; height=&#34;900&#34; style=&#34;border:2px solid currentColor;&#34; loading=&#34;lazy&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;script&gt;fitvids(&#39;.shareagain&#39;, {players: &#39;iframe&#39;});&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;排除可能的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;win10 系统防火墙&lt;a href=&#34;https://stackoverflow.com/questions/64252065/problem-rendering-hugo-lithium-theme-blogdown-acess-denied&#34;&gt;设置&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;chrome隐私&lt;a href=&#34;https://stackoverflow.com/questions/51634998/cannot-get-iframe-to-appear-on-static-html-page-after-knitting-through-rmarkdown&#34;&gt;设置&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;knitr::include_url()&lt;/code&gt;函数是否正确，包括&lt;code&gt;chunk option&lt;/code&gt;设定。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;url地址是否正确。外部绝对url地址显示正确。本地相对地址则报错。但使用&lt;code&gt;knitr::include_graphic()&lt;/code&gt;加载本地图片则能正确显示图片。排除url地址误写。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;iframe tag&lt;/code&gt;方法，仍旧报错。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;xaringanExtra::embed_xaringan()&lt;/code&gt;，仍旧报错。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;怀疑的可能原因：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;根据hugo团队的观点，它们会原生支持&lt;code&gt;rveal.js&lt;/code&gt;，但不是&lt;code&gt;remark.js&lt;/code&gt;。（见&lt;a href=&#34;&#34;&gt;队长讨论&lt;/a&gt;）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;win10操作系统静默升级，改变了hugo的链接访问权限？？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Netlify&lt;/code&gt;的建站规则发生了变化？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;knitr&lt;/code&gt;包的bug（iframe id失效）？&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Xaringan效率：底层与简洁</title>
      <link>https://huhuaping.netlify.app/2020/11/28/xaringan-slide-efficiency/</link>
      <pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/2020/11/28/xaringan-slide-efficiency/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#xaringan底层逻辑&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Xaringan底层逻辑&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#xaringan的渲染方式&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; Xaringan的渲染方式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#共用文件夹的情形&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; 共用文件夹的情形&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#测试和发现&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; 测试和发现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xaringan效率方法&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Xaringan效率方法&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#减少系统复杂性&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 减少系统复杂性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#提高代码复用性&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 提高代码复用性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#修改预览实时化&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3&lt;/span&gt; 修改预览实时化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#选用一个好模板&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4&lt;/span&gt; 选用一个好模板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#定制个性化模板&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5&lt;/span&gt; 定制个性化模板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#结论&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6&lt;/span&gt; 结论&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;xaringan底层逻辑&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Xaringan底层逻辑&lt;/h1&gt;
&lt;div id=&#34;xaringan的渲染方式&#34; class=&#34;section level2&#34; number=&#34;1.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; Xaringan的渲染方式&lt;/h2&gt;
&lt;p&gt;Xaringan slide的渲染方式主要有两类&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;静态渲染方式：Rstudio菜单knit&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实时渲染有两种方式（live preview）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rstudio里插件 “Infinite Moon Reader”&lt;/li&gt;
&lt;li&gt;console里调用xaringan::xaringan::inf_mr()&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;共用文件夹的情形&#34; class=&#34;section level2&#34; number=&#34;1.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; 共用文件夹的情形&lt;/h2&gt;
&lt;p&gt;mycss：假定课程里全部slide都使用同样的css风格。&lt;/p&gt;
&lt;p&gt;pic：假定课程slide里的本地图片都放在pic文件夹下。&lt;/p&gt;
&lt;p&gt;若干可能的文件体系结构及面临的主要问题&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;体系1“全部一起堆放”：随着Rmd文件数的增加，一级目录下会有很多文件！&lt;code&gt;chn-chpt01.Rmd; chn-chpt02.Rmd；……；eng-chpt01.Rmd; eng-chpt02.Rmd；……&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;体系2“分模块堆放”：比较合理。但是在实时渲染时，将面临如何管理css和pic等问题。子文件夹1：&lt;code&gt;Slide-chn：chn-chpt01.Rmd; chn-chpt02.Rmd；……&lt;/code&gt;;子文件夹2：&lt;code&gt;Slide-eng：eng-chpt01.Rmd; eng-chpt02.Rmd；……&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;测试和发现&#34; class=&#34;section level2&#34; number=&#34;1.3&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; 测试和发现&lt;/h2&gt;
&lt;p&gt;测试：比较合理的体系2“分模块对方”下，进行实时渲染&lt;/p&gt;
&lt;p&gt;css问题：xaringan包已经解决此问题。只要确保css文件和Rmd文件在同一个work directory下即可。&lt;/p&gt;
&lt;p&gt;pic问题：假定pic文件夹与模块文件夹(slide-chn; slide-eng)并列&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;静态渲染方式下，图片引用可以使用“相对路径”&lt;code&gt;(&#34;../pic/a.png&#34;)&lt;/code&gt;或“绝对路径”（&lt;code&gt;here::here(&#34;pic&#34;, &#34;a.png&#34;)&lt;/code&gt;）引用的任何一种来实现正常显示。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实时渲染方式下，图片引用只能使用“相对路径”(“../pic/a.png”)来实现正常显示。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;xaringan效率方法&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Xaringan效率方法&lt;/h1&gt;
&lt;div id=&#34;减少系统复杂性&#34; class=&#34;section level2&#34; number=&#34;2.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 减少系统复杂性&lt;/h2&gt;
&lt;p&gt;Yongfu的&lt;a href=&#34;https://yongfu.name/2019/04/29/xaringan_tips.html&#34;&gt;博客文章&lt;/a&gt;Tips to Reduce the Complexity of Slide Making with Xaringan，比较详细地介绍了如何减少xaringan制作复杂性的一些方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用子文档（child document）架构（see rmarkdown cookbook: &lt;a href=&#34;https://bookdown.org/yihui/rmarkdown-cookbook/child-document.html&#34;&gt;16.4 Child documents&lt;/a&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;提高代码复用性&#34; class=&#34;section level2&#34; number=&#34;2.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 提高代码复用性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;引用代码块。前后slide如果要多次（2次及以上）用到同样的代码块，则可以使用代码块标签索引（see rmarkdown cookbook: &lt;a href=&#34;https://bookdown.org/yihui/rmarkdown-cookbook/reuse-chunks.html&#34;&gt;reference labels&lt;/a&gt;）。具体有两种操作情形：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单重复引用代码块。先定义label，然后直接使用相同标签的代码块头即可。&lt;/li&gt;
&lt;li&gt;组合引用多个代码块。先定义label，然后设定&lt;code&gt;ref.label=&lt;/code&gt;参数进行引用即可。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# 简单重复引用代码块
`` `{r, chunk-one, eval=TRUE} # def

some long content balabala 

`` `{r, chunk-one, eval=TRUE} # use
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 组合引用多个代码块

`` `{r chunk-a} # def1

some long content balabala 

`` `{r chunk-b} # def2

some long content balabala 

`` `{r chunk-a, ref.label=c(&amp;#39;chunk-c&amp;#39;, &amp;#39;chunk-b&amp;#39;)} # use
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;修改预览实时化&#34; class=&#34;section level2&#34; number=&#34;2.3&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3&lt;/span&gt; 修改预览实时化&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;赶紧去看Yihui的blog，&lt;a href=&#34;https://yihui.name/en/2019/02/ultimate-inf-mr/&#34;&gt;The Ultimate Infinite Moon Reader for xaringan Slides&lt;/a&gt;。赶快安装更新包：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;remotes::install_github(&amp;#39;yihui/xaringan&amp;#39;, upgrade = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;而且是Windows用户的又一个福音啊。前面刚说Rstudio里不能Viewer预览，但是更新Xaringan包后发现Chrome浏览器竟然可以“实时”同步预览了！yoo！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;定制自己的字体大小：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在Rmd文档里添加代码：(参看&lt;a href=&#34;https://stackoverflow.com/questions/53481699/customize-font-size-for-all-the-slides-in-xaringan&#34;&gt;Customize font size for all the slides in xaringan&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
.remark-slide-content {
    font-size: 30px;
    padding: 1em 4em 1em 4em;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;选用一个好模板&#34; class=&#34;section level2&#34; number=&#34;2.4&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4&lt;/span&gt; 选用一个好模板&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;比如我使用的杜克大学模板：&lt;a href=&#34;https://johnlittle.info/dukeslides/&#34;&gt;Slide Template for Duke University&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;初学者最好先不要删除模板的内容，里面的示例说明可以很好地参考。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;定制个性化模板&#34; class=&#34;section level2&#34; number=&#34;2.5&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5&lt;/span&gt; 定制个性化模板&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;关于动画设置。并不是ppt的专利。可以实现的，请参看&lt;a href=&#34;https://www.garrickadenbuie.com/blog/animate-xaringan-slide-transitions/&#34;&gt;Animate Xaringan Slide Transitions&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关于定制样式。世界另一头，总有一个大牛，已经做好了包供你使用，具体请看&lt;a href=&#34;https://www.garrickadenbuie.com/project/xaringanthemer/&#34;&gt;xaringanthemer&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;结论&#34; class=&#34;section level2&#34; number=&#34;2.6&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6&lt;/span&gt; 结论&lt;/h2&gt;
&lt;p&gt;xaringan实时渲染方式，会调用servr package来搭建本地网页服务[参看官方文档] (&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/xaringan-preview.html&#34; class=&#34;uri&#34;&gt;https://bookdown.org/yihui/rmarkdown/xaringan-preview.html&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;因此实时渲染下：本地服务会寻找一个根目录（root directory），从而会引发上述的图片渲染问题。libs文件夹总是会和.Rmd文件并列&lt;/p&gt;
&lt;p&gt;总之，使用相对路径引用图片是比较保险的方式。具体的地方包括&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;remark.js背景图：&lt;code&gt;background-image: url(&#34;../pic/a.png&#34;)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;R函数正文图：&lt;code&gt;include_graphics(&#34;../pic/a.png&#34;)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;markdown行内图：&lt;code&gt;![](&#34;../pic/a.png&#34;)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其次，css的yaml设置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;css: 
      - default
      - default-fonts
      - duke-blue
      - hygge-duke
      - ../mycss/my-custom.css&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>建站平台hugo-academic大升级</title>
      <link>https://huhuaping.netlify.app/2020/10/05/hugo-big-update/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/2020/10/05/hugo-big-update/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/2020/10/05/hugo-big-update/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#hugo的大变革&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; hugo的大变革&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#本地开发预览一条思路填平若干个坑&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 本地开发预览：一条思路填平若干个坑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#云端开发预览netlify的断点&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 云端开发预览：netlify的断点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#后续故事&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; 后续故事&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#double-site&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.1&lt;/span&gt; 双服务器建站需求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#更新hugo-extend&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.2&lt;/span&gt; 更新hugo extend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#获得public文件夹&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.3&lt;/span&gt; 获得&lt;code&gt;public/&lt;/code&gt;文件夹&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#升级的副效应&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4&lt;/span&gt; 升级的副效应&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#rstudio插件addinsnew-post的正确使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4.1&lt;/span&gt; RStudio插件(addins)New post的正确使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#knitrinclude_graphics函数调用图片可能会报错&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4.2&lt;/span&gt; knitr::include_graphics函数调用图片可能会报错&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#netlify开发报错的验证与修复&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4.3&lt;/span&gt; netlify开发报错的验证与修复&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#一次意外报错&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.5&lt;/span&gt; 一次意外报错&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#blogdown的升级支持&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; blogdown的升级支持&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hugo模板微调&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6&lt;/span&gt; hugo模板微调&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#基本原理&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6.1&lt;/span&gt; 基本原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#给post博文添加floating-toc&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6.2&lt;/span&gt; 给post博文添加floating toc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;对于搭建个人网站，曾经有一句经典的忠告摆在我的面前：
永远不要使用复杂的模板，否则总有一天会掉入网站迁移漩涡，甚至万劫不复的境地。 ————nobody&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种事，总算是被我赶上了一遭。&lt;/p&gt;
&lt;p&gt;采用hugo-academic模板搭建个人网站，2020年9月3日以后，面临一次建站流程的全新大换代升级。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Convert an old Academic Kickstarter site If you have an existing site based on the Academic Kickstarter Template that was created before 3rd September 2020, it may need converting to use Hugo’s new modular system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在学习测试两天后，总算是跌跌撞撞地完成了网站的升级更新。截至写这篇博文，针对哪些blogdown用户，网络上还并没有足够完整和清晰的升级操作攻略。这里先记录一二，或许对于急迫升级的人有些许帮助。&lt;/p&gt;
&lt;p&gt;事先说明一下我的环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Win 10操作系统&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;R环境 R version 4.0.3 (2020-10-10)。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;升级后hugo version: &lt;code&gt;Hugo Static Site Generator v0.75.1/extended windows/amd64 BuildDate: unknown&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;netlify 关联 github的仓库，自动激活建站开发。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;hugo的大变革&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; hugo的大变革&lt;/h1&gt;
&lt;p&gt;hugo academic的大换血，变革了什么？后面复杂的flow、原理之类东东我也没有完全明白。不过基本按照官方的提示，是可以完成网站升级的，完全可以忽略下面这些什么go module之类的工具或概念。&lt;/p&gt;
&lt;p&gt;对于windowns党，你大概需要本地安装一些工具：&lt;a href=&#34;https://wowchemy.com/docs/install-locally/&#34;&gt;Edit your site on your PC&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;&gt;Hugo Extended&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://golang.org/dl/&#34;&gt;Go installed&lt;/a&gt; 用于执行hugo modules命令&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;git bash 这个不用多说了&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过按照官方的说法，此次最大的变革是实现了“模块化”建站流程。&lt;/p&gt;
&lt;p&gt;就我个人后面的感受而言，比前一代思路确实更加简洁，最关键的是建站速度贼快。&lt;/p&gt;
&lt;p&gt;倒是让我收获了一个很深刻的领悟：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;平时我可能只关心hugo的建站工具性，从来不想了解背后的最基本的指导思想和运行原理（尽管可能还是会一知半解，技术细节确实可以完全忽视）。现在看来，既然把身家大计（网站）都托付给了它，起码不能完全对其漠然无知。工具性导向很容易误人误事！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;本地开发预览一条思路填平若干个坑&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 本地开发预览：一条思路填平若干个坑&lt;/h1&gt;
&lt;p&gt;现在简单说一下blogdown用户，如何从早前一代的“hugo-academic”升级到新一代的“Wowchemy Hugo Module”流程。&lt;/p&gt;
&lt;p&gt;先说&lt;strong&gt;一条思路&lt;/strong&gt;——实际上我们完全可以用两种方法来实现academic模板的建站。如果按官方说明正确安装软件、工具和环境，则可以：&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;&lt;p&gt;blogdown+hugo建站。如果默认安装，hugo执行程序应该在&lt;code&gt;C:\Users\yourname\AppData\Roaming\Hugo\hugo.exe&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scoop+hugo建站。如果默认安装，hugo执行程序应该在&lt;code&gt;C:\Users\yourname\scoop\shims\hugo.exe&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;两种方式应该可以同时建站。如果报错，则建议把其中之一的hugo.exe修改为不可识别的（如hugo.exex）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我相信对于大部分blogdown用户而言，应该不太关心后一种。不过在目前的跨代升级中，这一条却是非常重要。因为前者的一些流程，需要后者来援助！&lt;/p&gt;
&lt;p&gt;下面列几个要点，跳开这几个坑应该就可以完成&lt;code&gt;blogdown+hugo&lt;/code&gt;建站升级过程：&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;一定记得提前备份网站！（git用户表示窃喜中）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;首先下载&lt;code&gt;starter-academica&lt;/code&gt;模板到本地，解压缩&lt;strong&gt;备用&lt;/strong&gt;。&lt;a href=&#34;https://github.com/wowchemy/starter-academic/archive/master.zip&#34;&gt;Download Academic Template&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;处理旧版网站的项目文件。如下操作删除旧模板。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;git submodule deinit themes/hugo-academic    
git rm themes -r&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;同时记得手动删除旧网站项目文件下的&lt;code&gt;public/&lt;/code&gt;文件夹。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;把新模板&lt;code&gt;starter-academic&lt;/code&gt;中的如下文件，拷贝或替换旧版网站项目文件：&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;模板文件，整个&lt;code&gt;exampleSite&lt;/code&gt;文件夹&lt;/li&gt;
&lt;li&gt;配置文件，整个&lt;code&gt;config&lt;/code&gt;文件夹&lt;/li&gt;
&lt;li&gt;两个go文件，&lt;code&gt;go.sum&lt;/code&gt;和&lt;code&gt;go.mod&lt;/code&gt;文件&lt;/li&gt;
&lt;li&gt;其他&lt;code&gt;starter-academic&lt;/code&gt;有，而旧项目文件里没有的文件。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在win power shell命令窗口中执行go操作&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;cd 命令进入到旧项目根文件夹下（此步骤自行脑补吧）&lt;/li&gt;
&lt;li&gt;go 命令执行建站：&lt;code&gt;hugo server&lt;/code&gt;（如果顺利，可以直接预览渲染的网站）；或者&lt;code&gt;hugo&lt;/code&gt;（如果顺利，可以得到渲染后的public/文件夹）&lt;/li&gt;
&lt;li&gt;如果不能顺利进行go建站渲染，则按提示修改其中的升级跃迁断点问题（break issues）。我碰到的断点问题主要是：&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;callout&lt;/code&gt;问题。按报错依次找到文件，替换参数即可。&lt;/li&gt;
&lt;li&gt;jpg图片问题。按照toml里参数的提示，把文件夹路径更换即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;网站内容的维护和调整。具体包括：&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;&lt;code&gt;config.toml&lt;/code&gt;参数的更新调整（地址等）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;content/&lt;/code&gt;文件夹各个.md的核查&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果在go建站预览下如果基本没有问题，则可以如常使用blogdown的&lt;code&gt;blogdown::serve_site()&lt;/code&gt;进行独立的建站渲染。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后，blogdown可能还是会报出提示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WARN 2020/10/05 21:08:20 Module &amp;quot;github.com/wowchemy/wowchemy-hugo-modules/wowchemy&amp;quot; is not compatible with this Hugo version; run &amp;quot;hugo mod graph&amp;quot; for more information.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不过，好在网站本地开发预览，总算是升级正常啦！&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;云端开发预览netlify的断点&#34; class=&#34;section level1&#34; number=&#34;3&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 云端开发预览：netlify的断点&lt;/h1&gt;
&lt;p&gt;尽管前面的网站本地开发预览已经OK，但是云端自动开发流程我们还没有进行配置。——我几乎又花费了一个早上来查找问题，直到最后成功。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心提示&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果仍旧采用旧版网站的netlify开发流程，则云端开发会一直提示fail。所以需要采用新的netlify开发流程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;netlify新开发流程，官方说是采用了CMS管理平台——里面的原理暂时没有深究。如果注意比较新旧流程开发同样的网站代码，会发现主要的区别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;开放工具链（tool chain）中，部分工具的版本新旧，如ruby、go等的调用&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开发速度上，新流程明显完成得更快&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了解决这个新旧流程得断点（break point）问题，暂时摸索出来的办法如下：&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;新建一个netlify开发网站&lt;/strong&gt;。根据starter-academic的官方说明，利用github账号接入netlify的api，创建一个基于starter-academic模板的github repo（称之为repo-B）。netlify预览网站（称之为website-B）应该是正常的。——这里纯粹是为了获得新流程的CMS平台。后面的话，这个repo可以直接不用。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;准备好本地开发成功的网站项目&lt;/strong&gt;。首先，准备工作。把本地开发预览正常的网站项目（称之为repo-A），推送到github远端（remote）。当然，关联给netlify云端的开发预览网站（称之为website-A）是不会成功更新的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;修改新旧网站的链接关系&lt;/strong&gt;。此时，我们有两个netlify网站（website-B和website-A）以及对应的两个github repo（repo-B和repo-A）。新流程下的website-B网站是完全可以云端正常自动开发的，但是旧流程下的website-A网站则是无法自动激发云端开发的。关键步骤就是“嫁接替换法”：&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;将website-B关联的github仓库，修改为repo-A。netlify操作过程：&lt;code&gt;https://app.netlify.com/sites/huhuaping-kick/settings/deploys#continuous-deployment&lt;/code&gt; –》build settings –》 edit setting –》reopsitory –》Link a different repository&lt;/li&gt;
&lt;li&gt;将website-B的域名修改为原来website-A的域名。netlify操作过程：&lt;code&gt;https://app.netlify.com/sites/huhuaping/settings/general&lt;/code&gt; –》sitede tails –》site information –》 change site name&lt;/li&gt;
&lt;li&gt;“嫁接替换”完成后，netlify就在CMS新流程下，开发了原来的repo-A的网站代码内容。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;至此，我们只需要继续维护本地更新升级后的repo-A，并持续推送给github，那么每次commit提交就会自动激活netlify使用新流程开发渲染网站内容啦！&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;后续故事&#34; class=&#34;section level1&#34; number=&#34;4&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; 后续故事&lt;/h1&gt;
&lt;p&gt;考虑到后期可能还会面临hugo academic升级的问题。相关升级问题记录如下：&lt;/p&gt;
&lt;div id=&#34;double-site&#34; class=&#34;section level2&#34; number=&#34;4.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.1&lt;/span&gt; 双服务器建站需求&lt;/h2&gt;
&lt;p&gt;我的特殊“双服务器”建站需求。简单说，首先我会使用blogdown+hugo+github+netlify工作流建立一个服务器在netlify的网站（A服务器网站），同时会得到该网站的一个&lt;code&gt;public&lt;/code&gt;文件夹。因为netlify服务器在国外，国际友人访问自然没有问题，但是国内访问速度明显就不行了。因此，我必须为国内访问用户搭建一个服务器在国内的同步“复刻网站”（B服务器网站），这时我只需要将前面的&lt;code&gt;public/&lt;/code&gt;文件夹同步上去即可。因此，“双服务器”建站需求，并不是我个人有什么极客级别的建站癖好，纯粹只是出于“简单性”和“可用性”原则。以上双服务器网站的差异性和联系：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;二者是几乎是“完全复制”的。但就网站更新频率和时间先后而言，后者更新频率更低而且会滞后于前者。下面说原因！&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;netlify网站（A服务器网站）是基于自动化工作流的（automate workflow），只需要github提交（commit）即可后台自动更新整个网站。因此是时效性最强的。而且可以基于git分支进行测试（如feature 分支），即兴写博客post或测试新功能，简直是指哪打哪，顺服得不要不要的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;国内网站（B服务器网站）采用的是goodsync的FTP自动上传同步功能。尽管也可以完全设定自动同步（例如，可以设定goodsync规则为：一旦&lt;code&gt;public、&lt;/code&gt;有文件修改就自动上传），但是因为不具备git那样的分枝提交功能，会导致同步正在测试阶段的网站，从而导致用户访问失败或页面错乱。最要命的是goodsync的FTP上传速度很慢，对于我这个相对庞杂的网站，要完成一次完整的网站同步，大概需要4-6个小时才能完成（家里稳定网速下）。简单说，我不能让B服务器网站“实时同步”，而且只能在网站版本稳定后才“手动”进行goodsync同步（一般在晚上进行这个同步动作）。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;更新hugo-extend&#34; class=&#34;section level2&#34; number=&#34;4.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.2&lt;/span&gt; 更新hugo extend&lt;/h2&gt;
&lt;p&gt;注意hugo extend与hugo存在一定差异性，简单说hugo extend似乎功能性要更多一点（参看&lt;a href=&#34;https://github.com/gohugoio/hugoDocs/issues/1152#issuecomment-646284959&#34;&gt;社区问答&lt;/a&gt;）。建议windows用户下载使用hugo extend。原因很简单：因为hugo extend能够让我顺利生成网站的本地&lt;code&gt;public/&lt;/code&gt;文件夹，而hugo则会报错无法生成&lt;code&gt;public/&lt;/code&gt;文件夹！更新hugo extend基本上有两种方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;方法一（已测试）&lt;/strong&gt;：手动下载hugo extend版本进行升级更新。具体做法进入官方版本&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34;&gt;下载界面&lt;/a&gt;，下载后解压缩并放到指定本地电脑路径下！还是要注意blogdown和scoop两种渲染网站的hugo路径是不同的。（见前面说过的这两种渲染方式。）&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# hugo extended
hugo_extended_0.80.0_Windows-64bit.zip

# target directory path for blogdown
C:\Users\huhua\AppData\Roaming\Hugo\0.80.0\hugo.exe

# target directory path for scoop
C:\Users\huhua\scoop\shims\hugo.exe&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;方法二（未测试过）&lt;/strong&gt;：在windows 命令行里进行hugo升级（见&lt;a href=&#34;https://wowchemy.com/docs/update/&#34;&gt;官方说明&lt;/a&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Update to get the very latest developments:
hugo mod get -u ./...

# Alternatively, update to the latest official release:
hugo mod get -u
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;获得public文件夹&#34; class=&#34;section level2&#34; number=&#34;4.3&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.3&lt;/span&gt; 获得&lt;code&gt;public/&lt;/code&gt;文件夹&lt;/h2&gt;
&lt;p&gt;更新blogdown包。照常使用Rstudio addins &lt;code&gt;serv site&lt;/code&gt;。需要注意的是新的hugo流程默认是在缓存里渲染网站，也就意味着&lt;code&gt;public/&lt;/code&gt;文件夹默认不会随着渲染而自动更新。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解决方案1（已测试）：那么需要blogdown执行的是&lt;strong&gt;本地渲染&lt;/strong&gt;（参看 &lt;a href=&#34;https://stackoverflow.com/questions/64500959/problem-with-rendering-hugo-blogdown-site&#34;&gt;网络问答&lt;/a&gt;）。（尽管如此，blogdown本地预览会优先使用&lt;code&gt;public/&lt;/code&gt;文件夹，所以好像必须要删除&lt;code&gt;public/&lt;/code&gt;才能获得实时修改更新，这似乎是一个bug啊！目前对这个问题也是纠结中。因为它带来了goodsync的一个同步问题，每次获得blogdown方法下的&lt;code&gt;public/&lt;/code&gt;文件夹里的每一个文件都是全新的、不同于原同步文件（生成时间或内容改变了），这将意味着goodsync每次同步都必须上传&lt;code&gt;public/&lt;/code&gt;的所有文件！——而实际上我只是小步调更改了网站的部分内容！）&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::build_site(local=TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;解决方案2（已测试）：直接在windows命令视窗里指定hugo生成&lt;code&gt;public/&lt;/code&gt;文件夹。具体参看blogdown社区&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/495&#34;&gt;讨论&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hugo -d ./public
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;升级的副效应&#34; class=&#34;section level2&#34; number=&#34;4.4&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4&lt;/span&gt; 升级的副效应&lt;/h2&gt;
&lt;div id=&#34;rstudio插件addinsnew-post的正确使用&#34; class=&#34;section level3&#34; number=&#34;4.4.1&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4.1&lt;/span&gt; RStudio插件(addins)New post的正确使用&lt;/h3&gt;
&lt;p&gt;使用RStudio插件(addins)中blogdown下的&lt;code&gt;New post&lt;/code&gt;暂时还会带来困扰（参看&lt;a href=&#34;https://stackoverflow.com/questions/64688201/blogdown-new-post-addin-creates-but-not-loads-new-file&#34;&gt;“stackoverflow队长”问答&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;按照hugo的新流程，每个blog都会建立自己的对应的文件夹（参看&lt;a href=&#34;https://ropensci.org/technotes/2020/04/23/rmd-learnings/&#34;&gt;网页&lt;/a&gt;）。当然，其背后的原因是hugo新版本（Hugo version 0.32以上）引入了“页面束捆”（&lt;a href=&#34;https://gohugo.io/content-management/page-bundles/&#34;&gt;Page Bundles&lt;/a&gt;）特性。具体文件夹结构如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;                                          levelName
1  post                                            
2   |--data                                        
3   |   |--fultonfish.rda                          
4   |   |--fultonfish.xlsx                         
5   |   °--other-data-file.dat                     
6   |--pic                                         
7   |   |--check-box-invisible.png                 
8   |   °--other-image-file.jpeg                   
9   |--2020-12-05-web-scraping-tech-webelem.en.Rmd 
10  |--2020-12-05-web-scraping-tech-webelem.en.html
11  °--2021-01-31-new-post                         
12      |--index.en_file                           
13      |--index.en.Rmd                            
14      °--index.en.html                           &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;blogdown这样的new-post文件夹系统变化带来的一个影响效应是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;新旧文件夹体系的不一致性（见上面树形结构图）。虽然只是视觉上的差异，但是还是不够“一致”！当然，也可以关闭这样的新文件夹体系（“页面束捆”），具体需要在&lt;code&gt;.Rprofile&lt;/code&gt;文件设定 &lt;code&gt;options(blogdown.new_bundle = FALSE)&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;致命的影响是Rmarkdown引以为傲的直接R代码块功能。新体系下，可以丝滑般得到正常的R代码块运行效果（已测试。这得益于新文件系统下的self-contained理念）；旧体系下则无法运行。而且经测试，新文件夹体系下，不会影响图片&lt;code&gt;/pic/.png&lt;/code&gt;和数据文件&lt;code&gt;/data/.rds&lt;/code&gt;的调用。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!---

- 困扰2：默认情况下，yaml区域不会自动指定输出样式，从而导致报错。因此需要在yaml区域手动添加如下参数：

```r
output:
  blogdown::html_page:
    toc: true
```
---&gt;
&lt;/div&gt;
&lt;div id=&#34;knitrinclude_graphics函数调用图片可能会报错&#34; class=&#34;section level3&#34; number=&#34;4.4.2&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4.2&lt;/span&gt; knitr::include_graphics函数调用图片可能会报错&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;knitr::include_graphics&lt;/code&gt;函数调用图片，需要额外设定参数&lt;code&gt;error = FALSE&lt;/code&gt;。（参看&lt;a href=&#34;https://stackoverflow.com/questions/60292022/knitr-cannot-find-img-files-in-static-folder&#34;&gt;网络问答&lt;/a&gt;）&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#knitr::include_graphics(here::here(&amp;quot;static&amp;quot;,&amp;quot;pic&amp;quot;,&amp;quot;check-box-invisible.png&amp;quot;))

#knitr::include_graphics(&amp;quot;../../static/img/check-box-invisible.png&amp;quot;)
knitr::include_graphics(&amp;quot;/pic/check-box-invisible.png&amp;quot;, error = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://huhuaping.netlify.app/pic/check-box-invisible.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;netlify开发报错的验证与修复&#34; class=&#34;section level3&#34; number=&#34;4.4.3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4.3&lt;/span&gt; netlify开发报错的验证与修复&lt;/h3&gt;
&lt;p&gt;有时候本地预览显示正常，但netlify网站开发仍可能出错（Deploy failed），导致无法更新云端网站，此时则建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;登陆&lt;a href=&#34;https://app.netlify.com/&#34;&gt;netlify&lt;/a&gt;账户，立即查看开发日志（Deploy log）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rstudio里利用&lt;code&gt;blogdown::check_site()&lt;/code&gt;函数进行网站检查，并根据提示做出修改调整。具体参看blogdown&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/576#issuecomment-768379160&#34;&gt;社区问答&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是我的Rstudio里的一个网站检查结果和建议清单：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::check_site()

# here my check result
― Running a series of automated checks for your blogdown website project...
----------------------------------------------------------------------------------------------
○ A successful check looks like this.
● [TODO] A check that needs your attention looks like this.
| Let&amp;#39;s check out your blogdown site!
----------------------------------------------------------------------------------------------
― Checking config.toml
| Checking &amp;quot;baseURL&amp;quot; setting for Hugo...
○ Found baseURL = &amp;quot;https://huhuaping.netlify.app/&amp;quot;; nothing to do here!
| Checking &amp;quot;ignoreFiles&amp;quot; setting for Hugo...
● [TODO] Add these items to the &amp;quot;ignoreFiles&amp;quot; setting: &amp;quot;\\.knit\\.md$&amp;quot;, &amp;quot;\\.utf8\\.md$&amp;quot;
| Checking setting for Hugo&amp;#39;s Markdown renderer...
○ All set! Found the &amp;quot;unsafe&amp;quot; setting for goldmark.
― Check complete: config.toml

― Checking .gitignore
| Checking for items to remove...
○ Nothing to see here - found no items to remove.
| Checking for items to change...
● [TODO] Change items in .gitignore: blogdown -&amp;gt; /blogdown, public/ -&amp;gt; /public/
| Checking for items you can safely ignore...
● [TODO] You can safely add to .gitignore: .DS_Store, Thumbs.db
| Checking for items to ignore if you build the site on Netlify...
● [TODO] When Netlify builds your site, you can safely add to .gitignore: /public/, /resources/
| Checking for files required by blogdown but not committed...
● [TODO] Found 1 file that should be committed in GIT:

  layouts/shortcodes/blogdown/postref.html
― Check complete: .gitignore

― Checking Hugo
| Checking Hugo version...
○ Found 4 versions of Hugo. You are using Hugo 0.80.0.
| Checking .Rprofile for Hugo version used by blogdown...
| Hugo version not set in .Rprofile.
● [TODO] Set options(blogdown.hugo.version = &amp;quot;0.80.0&amp;quot;) in .Rprofile and restart R.
― Check complete: Hugo

― Checking netlify.toml...
○ Found HUGO_VERSION = 0.80.0 in [build] context of netlify.toml.
| Checking that Netlify &amp;amp; local Hugo versions match...
○ It&amp;#39;s a match! Blogdown and Netlify are using the same Hugo version (0.80.0).
| Checking that Netlify &amp;amp; local Hugo publish directories match...
○ Good to go - blogdown and Netlify are using the same publish directory: public
― Check complete: netlify.toml

― Checking content files
| Checking for validity of YAML metadata in posts...
○ All YAML metadata appears to be syntactically valid.
| Checking for previewed content that will not be published...
○ Found 0 files with future publish dates.
● [TODO] Found 2 files marked as drafts. To un-draft, run the command:

  blogdown::edit_draft(c(
  &amp;quot;content/privacy.md&amp;quot;,
  &amp;quot;content/terms.md&amp;quot;
  ))

  and change a file&amp;#39;s YAML from &amp;#39;draft: true&amp;#39; to &amp;#39;draft: false&amp;#39; or delete it
| Checking your R Markdown content...
○ All R Markdown files have been knitted.
● [TODO] Found 2 R Markdown files to update by re-rendering:

  content/post/2019-04-10-note-for-git-version-control-skills.Rmd
  content/post/2020-10-05-hugo-big-update/index.en.Rmd

  To update a file, re-knit or use blogdown::build_site(build_rmd = &amp;#39;timestamp&amp;#39;)
| Checking for .html/.md files to clean up...
○ Found 0 duplicate .html output files.
○ Found 0 incompatible .html files to clean up.
| Checking for the unnecessary &amp;#39;content/&amp;#39; directory in theme...
○ Great! Your theme does not contain the content/ directory.
― Check complete: Content&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;具体调整如下：&lt;/p&gt;
&lt;p&gt;调整1：根据建议，&lt;code&gt;config.toml&lt;/code&gt;需要调整&lt;code&gt;ignoreFiles&lt;/code&gt;参数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Checking &amp;quot;ignoreFiles&amp;quot; setting for Hugo...
[TODO] Add these items to the &amp;quot;ignoreFiles&amp;quot; setting: &amp;quot;\\.knit\\.md$&amp;quot;, &amp;quot;\\.utf8\\.md$&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;调整2：根据建议，&lt;code&gt;.gitignore&lt;/code&gt;需要调整参数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[TODO] Change items in .gitignore: blogdown -&amp;gt; /blogdown, public/ -&amp;gt; /public/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;调整3：根据建议，&lt;code&gt;.Rprofilee&lt;/code&gt;需要调整hugo版本参数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hugo version not set in .Rprofile.
[TODO] Set options(blogdown.hugo.version = &amp;quot;0.80.0&amp;quot;) in .Rprofile and restart R.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;调整4：根据建议，部分Rmd文件需要重新渲染更新，可采用函数&lt;code&gt;blogdown::build_site(build_rmd = &#39;timestamp&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[TODO] Found 2 R Markdown files to update by re-rendering:

  content/post/2019-04-10-note-for-git-version-control-skills.Rmd
  content/post/2020-10-05-hugo-big-update/index.en.Rmd

  To update a file, re-knit or use blogdown::build_site(build_rmd = &amp;#39;timestamp&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;一次意外报错&#34; class=&#34;section level2&#34; number=&#34;4.5&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.5&lt;/span&gt; 一次意外报错&lt;/h2&gt;
&lt;p&gt;实在莫名其妙，无论&lt;code&gt;hugo&lt;/code&gt;渲染网站（powershell命令下&lt;code&gt;hugo server&lt;/code&gt;），还是&lt;code&gt;blogdown&lt;/code&gt;渲染网站（&lt;code&gt;server_site&lt;/code&gt;）分别出现如下报错。&lt;/p&gt;
&lt;p&gt;1.报错信息1：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Error: from config: failed to resolve output format &amp;quot;WebAppManifest&amp;quot; from site config&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2.报错信息2：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Error: from config: failed to resolve output format &amp;quot;headers&amp;quot; from site config&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;两次报错，如同官网提到的&lt;a href=&#34;https://wowchemy.com/docs/guide/troubleshooting/#error-failed-to-resolve-output-format&#34;&gt;“Error: failed to resolve output format”&lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;最后按照官方处理办法：&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;config.toml&lt;/code&gt;的&lt;code&gt;[outputs]&lt;/code&gt;清单中暂时先删除&lt;code&gt;&#34;RSS&#34;, &#34;JSON&#34;, &#34;WebAppManifest&#34;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后在&lt;code&gt;powershell&lt;/code&gt;命令窗口中依次输入如下命令：&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;hugo mod clean
hugo mod get -u ./...
hugo mod tidy&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;完成上述操作后，再把&lt;code&gt;&#34;RSS&#34;, &#34;JSON&#34;, &#34;WebAppManifest&#34;&lt;/code&gt;补回原处即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;blogdown的升级支持&#34; class=&#34;section level1&#34; number=&#34;5&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; blogdown的升级支持&lt;/h1&gt;
&lt;p&gt;由于&lt;code&gt;hugo&lt;/code&gt;在建站流程上做了很大的改变，&lt;code&gt;blogdown&lt;/code&gt;包也在2021年1月迭代到了&lt;code&gt;v1.0&lt;/code&gt;版本，显然这次是大版本升级以支持&lt;code&gt;hugo&lt;/code&gt;，具体可以参看包作者的声明&lt;a href=&#34;https://blog.rstudio.com/2021/01/18/blogdown-v1.0/&#34;&gt;“Announcing blogdown v1.0”&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;其中一些包函数值得关注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;blogdown::built_site()&lt;/code&gt;函数，涉及到是否产生&lt;code&gt;/public&lt;/code&gt;文件夹和如何渲染&lt;code&gt;.Rmd&lt;/code&gt;文件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;blogdown::check_.()&lt;/code&gt;类函数，主要用于核查和比对&lt;code&gt;blogdown&lt;/code&gt;与&lt;code&gt;hugo&lt;/code&gt;在配置等方面是否一致。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;blogdown::find_hugo(&#39;all&#39;)&lt;/code&gt;函数，方便掌握自己正在（或曾经）使用的hugo版本。为稳定hugo版本，可以设定&lt;code&gt;.Rprofile&lt;/code&gt;文件，具体可设定为例如&lt;code&gt;options(blogdown.hugo.version = &#34;0.79.0&#34;)&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;blogdown::remove_hugo()&lt;/code&gt;函数，可以删除未使用的hugo版本。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;hugo模板微调&#34; class=&#34;section level1&#34; number=&#34;6&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;6&lt;/span&gt; hugo模板微调&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;劝君更进一杯酒，模板莫要闲折腾。——somebody&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果使用blogdown开发课程内容，网上有人提醒慎重升级&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不要升级&lt;code&gt;hugo&lt;/code&gt;（包括&lt;code&gt;hugo extend&lt;/code&gt;）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不要更新&lt;code&gt;hugo theme&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;课程开发期间，不要升级任何东西！&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;基本原理&#34; class=&#34;section level2&#34; number=&#34;6.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;6.1&lt;/span&gt; 基本原理&lt;/h2&gt;
&lt;p&gt;考虑到&lt;code&gt;hugo-academic&lt;/code&gt;模板会不断升级，如果用户想要对模板进行个性化调整，因此&lt;code&gt;hugo&lt;/code&gt;开发了一套&lt;strong&gt;模板查找顺位机制&lt;/strong&gt;（&lt;a href=&#34;https://gohugo.io/templates/lookup-order/&#34;&gt;template lookup&lt;/a&gt;）。用户可以在不直接修改&lt;code&gt;hugo-academic&lt;/code&gt;官方模板文件下，独立地进行个性化修改和微调。当然用户的任何个性化修改，都需要在约定文件路径下，且使用&lt;code&gt;go&lt;/code&gt;&lt;a href=&#34;https://gohugo.io/hugo-modules/&#34;&gt;语法&lt;/a&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;优点：官方模板文件和用户个性化修改文件互相分离和独立，保证了二者并行不悖。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;缺点：用户需要熟悉&lt;code&gt;go&lt;/code&gt;语法。此外，因为官方模板会不断迭代变化，用户个性化修改可能会失效，因而需要不断去配合官方的迭代步骤！&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;给post博文添加floating-toc&#34; class=&#34;section level2&#34; number=&#34;6.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;6.2&lt;/span&gt; 给post博文添加floating toc&lt;/h2&gt;
&lt;p&gt;官方模板下，默认的&lt;code&gt;post&lt;/code&gt;是基于&lt;code&gt;widget: pages&lt;/code&gt;样式。其视觉效果特点是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在pc端，&lt;code&gt;chrome&lt;/code&gt;浏览器下post博文正文宽度为720px，如果显示器分辨率为&lt;code&gt;1920*1080&lt;/code&gt;，那么正文的宽度占比为37.5%。按照时兴的说法就是“屏占比”太低！&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在移动手机端，post博文正文宽度显示不错。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;默认情况下，是没有目录导航的（toc）。当然也可以通过添加yaml参数&lt;code&gt;toc: true&lt;/code&gt;来添加目录导航，但是toc显示在正文之前（而且没有“目录”字样）。对于分节较多的长篇博文，非常不利于读者阅读定位和前后对照。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，对于分节较多的长篇博文，自然就有了“侧边浮动目录”（sidebar floating toc）的个性化页面样式修订念头。yihui&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/375#issuecomment-476332000&#34;&gt;建议&lt;/a&gt;可以通过JavaScript或CSS进行设定。Xiaoou WANG也提供了一个hugo语法下的&lt;a href=&#34;https://xiaoouwang.github.io/post/add_a_float_toc_to_academic_theme/&#34;&gt;实现方法&lt;/a&gt;，但是有不少bug。又比如CharlieLeee的&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/issues/1520#issuecomment-601982609&#34;&gt;方法&lt;/a&gt;，只是对于&lt;code&gt;.md&lt;/code&gt;格式的写作有效，而对&lt;code&gt;.Rmd&lt;/code&gt;格式的写作&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/issues/1520#issuecomment-610210353&#34;&gt;无效&lt;/a&gt;。因此，最后的忠告就是专注于内容写作：劝君更进一杯酒，模板莫要闲折腾。&lt;/p&gt;
&lt;!---footnote---&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://rstudio-education.github.io/sharing-short-notice/#148&#34;&gt;blogdown advice&lt;/a&gt;&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>LateX输出的相关设置</title>
      <link>https://huhuaping.netlify.app/2019/07/16/work-around-latex-output/</link>
      <pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/2019/07/16/work-around-latex-output/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装tinytex&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 安装tinyTeX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#踩过的latex各种坑&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 踩过的Latex各种坑&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#千分数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 千分数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;安装tinytex&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 安装tinyTeX&lt;/h1&gt;
&lt;p&gt;参看谢益辉&lt;a href=&#34;https://yihui.name/tinytex/&#34;&gt;TinyTeX&lt;/a&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;安装tinytex&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;#39;tinytex&amp;#39;)
tinytex::install_tinytex()&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;测试并调用&lt;code&gt;tlmgr&lt;/code&gt;命令安装latex包&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;writeLines(c(
   &amp;#39;\\documentclass{article}&amp;#39;,
   &amp;#39;\\begin{document}&amp;#39;, &amp;#39;Hello world!&amp;#39;, &amp;#39;\\end{document}&amp;#39;
 ), &amp;#39;test.tex&amp;#39;)
tinytex::pdflatex(&amp;#39;test.tex&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;踩过的latex各种坑&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 踩过的Latex各种坑&lt;/h1&gt;
&lt;div id=&#34;千分数&#34; class=&#34;section level2&#34; number=&#34;2.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 千分数&lt;/h2&gt;
&lt;p&gt;注意这里的&lt;strong&gt;千分数&lt;/strong&gt;是指&lt;strong&gt;千分之几&lt;/strong&gt;（也即&lt;span class=&#34;math inline&#34;&gt;\(\unicode{x2030}\)&lt;/span&gt;），而不是指&lt;strong&gt;千分位分隔符&lt;/strong&gt;（一般用逗点或空格）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Latex环境下，一般用法有latex包&lt;code&gt;textcomp::\textperthousand&lt;/code&gt;或者&lt;code&gt;wasysym::\permil&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rmarkdown下，最好直接使用&lt;code&gt;\unicode{x2030}&lt;/code&gt;&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;来输出千分数&lt;span class=&#34;math inline&#34;&gt;\(\unicode{x2030}\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;具体可&lt;a href=&#34;https://stats.meta.stackexchange.com/questions/2884/how-to-get-a-permille-perthousand-sign-in-mathjax&#34;&gt;参看&lt;/a&gt;。&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>基于学习型社区模式的在线课程学习行为投入、效果评价及优化路径研究</title>
      <link>https://huhuaping.netlify.app/publication/education-research/</link>
      <pubDate>Wed, 03 Jul 2019 00:00:00 +0800</pubDate>
      <guid>https://huhuaping.netlify.app/publication/education-research/</guid>
      <description>&lt;p&gt;&lt;strong&gt;研究报告&lt;/strong&gt;请点击查看&lt;a href=&#34;https://huhuaping.netlify.app/research-education/report-01-CSPS-score-model.html&#34;&gt;(HTML网页形式)&lt;/a&gt;；&lt;a href=&#34;https://huhuaping.netlify.app/research-education/report-01-CSPS-score-model.pdf&#34;&gt;(pdf形式)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;汇报总结&lt;/strong&gt;请点击查看&lt;a href=&#34;https://huhuaping.netlify.app/research-education/slide-01-CSPS-score-model.html&#34;&gt;(slide形式)&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;操作提示：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;点击&lt;strong&gt;课件区域&lt;/strong&gt;，按F键，可全屏观看&lt;/li&gt;
&lt;li&gt;按方向键，可以前进/后退&lt;/li&gt;
&lt;li&gt;敲击数字键，再按Enter可进入任意指定的页码。如，敲击数字10，观看第10页&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Xaringan缘起：创建课程slide</title>
      <link>https://huhuaping.netlify.app/2019/02/24/xaringan-for-course-slide/</link>
      <pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://huhuaping.netlify.app/2019/02/24/xaringan-for-course-slide/</guid>
      <description>
&lt;script src=&#34;https://huhuaping.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#前言&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#逃离powerpoint拥抱html5&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 逃离PowerPoint，拥抱HTML5？&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#powerpoint的断舍离&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; PowerPoint的“断、舍、离”&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#html形式slide的前世今生&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; HTML形式slide的“前世今生”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xaringan的优势和不足&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; Xaringan的优势和不足&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#xaringan的优势&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; Xaringan的优势&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xaringan的不足&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2&lt;/span&gt; Xaringan的不足&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;前言&#34; class=&#34;section level1&#34; number=&#34;1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 前言&lt;/h1&gt;
&lt;p&gt;现在对（本科）教学工作的要求，已经发生了很大的改变：教学的内容变得更加专业化和细分化（学生就业市场的倒逼）；教学过程/流程需要标准化（一切变得透明公开）；教学活动应该能够便于复制并规模化运行（课程最好能以公开课/慕课方式运作）；个性化教学和灵活性调整被反复强调（对学生多元考核、“一人一套试卷”）；其他方面。&lt;/p&gt;
&lt;p&gt;教师在讲台上的台前“艺术化”魅力（仪态、表情、音色等）已经不再如曾经那么重要；教师在台后的“技术性”设计（内容、互动、展示等）上升到了无与伦比的地位。&lt;/p&gt;
&lt;p&gt;尤其是对于哪些&lt;strong&gt;技术性课程&lt;/strong&gt;，如计量经济学（Econometrics）和统计学（Statistics），“技术性”设计必须要赶上这些教学新要求的呼声。（当你发现一位大学教师还在“坚持”使用Office2007，你一点都不要惊讶——经管现在已经是2019年了。）&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;逃离powerpoint拥抱html5&#34; class=&#34;section level1&#34; number=&#34;2&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 逃离PowerPoint，拥抱HTML5？&lt;/h1&gt;
&lt;p&gt;为什么要逃离PowerPoint，拥抱HTML形式的slide？下面分别来说一说。&lt;/p&gt;
&lt;div id=&#34;powerpoint的断舍离&#34; class=&#34;section level2&#34; number=&#34;2.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; PowerPoint的“断、舍、离”&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;office版本太过分散，ppt可能会上演各种“变形记”。（现在国内有很多学生，已经不能区分WPS和Office了。学生的毕业论文或作业提交，那酸爽，真是谁看谁知道。）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ppt维护和更新的各种“梗”。最让我纠结的就是mathtype公式，神一般地会一夜之间“变砖”（倒腾几下，公式变图片，或者干脆显示不了），更不要说公式的重复使用和编辑修改。如果使用一些新技巧、新字体，那一定会让你记住“凡走过的都是一个一个的巨坑”。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;难以逾越数据、图形和模型分析的“天堑”。表格数据加总等分析基本等于不可能（事实上也可以关联excel，但是“关联越多，等价于羁绊越多”！）；数据图形化，你只能老老实实拷贝统计软件里的做好的图吧（泪奔！）；建模分析结果的调用，就更别提了（反复在多个软件窗口中切换和敲键盘，眼花缭乱的“骚操作”不说，最担心的还是手一抖怕敲错了结果啊！）。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;html形式slide的前世今生&#34; class=&#34;section level2&#34; number=&#34;2.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; HTML形式slide的“前世今生”&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;一个浏览器就够了。HTML是互联网世界最广泛使用的交流形式。每台电脑都会安装浏览器（chrome、firefox、IE…），但不是都会安装Microsoft office全家桶（365家庭版那可是每年500RMB啊，心疼一下下！）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一份文本多种输出形态的终极需求。就像KTV里嗨唱切歌，老师们常常要在word、pdf、html、ppt、png等格式中不断切换啊。一个逗号或减号，在word里改了，那还得改ppt啊，就问你蛋疼不蛋疼。所以，仅维护一份文本，随时获得各种输出（html、word、ppt、slide…）简直就是人类共同的梦想啊。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“纯文本”就是你的最底层“话语”。一切的文字、代码、图形、格式、排版…，统统汇集于一份“纯文本”中！&lt;strong&gt;Plain Text&lt;/strong&gt;，正如其名，平铺直叙，朴素而不简单，包含了你所需的一切，你想说和想呈现的一切。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;xaringan的优势和不足&#34; class=&#34;section level1&#34; number=&#34;3&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; Xaringan的优势和不足&lt;/h1&gt;
&lt;div id=&#34;xaringan的优势&#34; class=&#34;section level2&#34; number=&#34;3.1&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; Xaringan的优势&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;R语言和RMarkdown的应用就是它最大的优势。这赋予了教学准备工作更强的“生产力”：代码可重复利用、统计处理和分析报告完美整合。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Xaringan Slide可以高度灵活的定制化。本质上形式的呈现，完全依赖于CSS技术，这与PowerPoint中的模板使用是完全不同的体验，效率上完全秒掉后者。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Xaringan Slide可以完美转成pdf格式的slide。其实直接用Chrome浏览器打开HTML Slide不就完了嘛，这种格式转换的操作本来就是多此一举！总之，你说，世界需要pdf；于是Xaringan便说，给你pdf！&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;与GitHub版本控制技术融合。我想说的是，这是一种全新的师生交互和反馈机制！&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;xaringan的不足&#34; class=&#34;section level2&#34; number=&#34;3.2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2&lt;/span&gt; Xaringan的不足&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对行内公式支持不是很友好。比如&lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;的实现代码&lt;code&gt;$\beta$&lt;/code&gt;必须要保持独立一行！一段话要是有很多这样的inline equation，那么xaringan::moon_reader文档就显得很破碎了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;风格调整CSS技术的学习还是有一定成本的。换言之，制作一份自己喜欢的“专属”模板，还需要花费一些时间。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;强迫症的一些小细节。使用&lt;code&gt;knitr::kable()&lt;/code&gt;制表，转pdf时表格无法显示，替代办法就是用&lt;code&gt;DT::datatable()&lt;/code&gt;的表格风格，而它往往不是真正的Table风格！另外，就是windows环境下，不支持Rstudio面板Viewer中预览slide，只能在浏览器中预览。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
